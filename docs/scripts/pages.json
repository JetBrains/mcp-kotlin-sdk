[{"name":"CompletionComplete","description":"org.jetbrains.kotlinx.mcp.Method.Defined.CompletionComplete","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-completion-complete/index.html","searchKeys":["CompletionComplete","CompletionComplete","org.jetbrains.kotlinx.mcp.Method.Defined.CompletionComplete"]},{"name":"ConnectionClosed","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.ConnectionClosed","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-connection-closed/index.html","searchKeys":["ConnectionClosed","ConnectionClosed","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.ConnectionClosed"]},{"name":"Initialize","description":"org.jetbrains.kotlinx.mcp.Method.Defined.Initialize","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-initialize/index.html","searchKeys":["Initialize","Initialize","org.jetbrains.kotlinx.mcp.Method.Defined.Initialize"]},{"name":"InternalError","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InternalError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-internal-error/index.html","searchKeys":["InternalError","InternalError","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InternalError"]},{"name":"InvalidParams","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InvalidParams","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-invalid-params/index.html","searchKeys":["InvalidParams","InvalidParams","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InvalidParams"]},{"name":"InvalidRequest","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InvalidRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-invalid-request/index.html","searchKeys":["InvalidRequest","InvalidRequest","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.InvalidRequest"]},{"name":"LoggingSetLevel","description":"org.jetbrains.kotlinx.mcp.Method.Defined.LoggingSetLevel","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-logging-set-level/index.html","searchKeys":["LoggingSetLevel","LoggingSetLevel","org.jetbrains.kotlinx.mcp.Method.Defined.LoggingSetLevel"]},{"name":"MethodNotFound","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.MethodNotFound","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-method-not-found/index.html","searchKeys":["MethodNotFound","MethodNotFound","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.MethodNotFound"]},{"name":"NotificationsCancelled","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsCancelled","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-cancelled/index.html","searchKeys":["NotificationsCancelled","NotificationsCancelled","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsCancelled"]},{"name":"NotificationsInitialized","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsInitialized","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-initialized/index.html","searchKeys":["NotificationsInitialized","NotificationsInitialized","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsInitialized"]},{"name":"NotificationsMessage","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-message/index.html","searchKeys":["NotificationsMessage","NotificationsMessage","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsMessage"]},{"name":"NotificationsProgress","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsProgress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-progress/index.html","searchKeys":["NotificationsProgress","NotificationsProgress","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsProgress"]},{"name":"NotificationsPromptsListChanged","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsPromptsListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-prompts-list-changed/index.html","searchKeys":["NotificationsPromptsListChanged","NotificationsPromptsListChanged","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsPromptsListChanged"]},{"name":"NotificationsResourcesListChanged","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsResourcesListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-resources-list-changed/index.html","searchKeys":["NotificationsResourcesListChanged","NotificationsResourcesListChanged","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsResourcesListChanged"]},{"name":"NotificationsResourcesUpdated","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsResourcesUpdated","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-resources-updated/index.html","searchKeys":["NotificationsResourcesUpdated","NotificationsResourcesUpdated","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsResourcesUpdated"]},{"name":"NotificationsRootsListChanged","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsRootsListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-roots-list-changed/index.html","searchKeys":["NotificationsRootsListChanged","NotificationsRootsListChanged","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsRootsListChanged"]},{"name":"NotificationsToolsListChanged","description":"org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsToolsListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-notifications-tools-list-changed/index.html","searchKeys":["NotificationsToolsListChanged","NotificationsToolsListChanged","org.jetbrains.kotlinx.mcp.Method.Defined.NotificationsToolsListChanged"]},{"name":"ParseError","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.ParseError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-parse-error/index.html","searchKeys":["ParseError","ParseError","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.ParseError"]},{"name":"Ping","description":"org.jetbrains.kotlinx.mcp.Method.Defined.Ping","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-ping/index.html","searchKeys":["Ping","Ping","org.jetbrains.kotlinx.mcp.Method.Defined.Ping"]},{"name":"PromptsGet","description":"org.jetbrains.kotlinx.mcp.Method.Defined.PromptsGet","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-prompts-get/index.html","searchKeys":["PromptsGet","PromptsGet","org.jetbrains.kotlinx.mcp.Method.Defined.PromptsGet"]},{"name":"PromptsList","description":"org.jetbrains.kotlinx.mcp.Method.Defined.PromptsList","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-prompts-list/index.html","searchKeys":["PromptsList","PromptsList","org.jetbrains.kotlinx.mcp.Method.Defined.PromptsList"]},{"name":"RequestTimeout","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.RequestTimeout","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/-request-timeout/index.html","searchKeys":["RequestTimeout","RequestTimeout","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.RequestTimeout"]},{"name":"ResourcesList","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesList","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-resources-list/index.html","searchKeys":["ResourcesList","ResourcesList","org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesList"]},{"name":"ResourcesRead","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesRead","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-resources-read/index.html","searchKeys":["ResourcesRead","ResourcesRead","org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesRead"]},{"name":"ResourcesSubscribe","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesSubscribe","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-resources-subscribe/index.html","searchKeys":["ResourcesSubscribe","ResourcesSubscribe","org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesSubscribe"]},{"name":"ResourcesTemplatesList","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesTemplatesList","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-resources-templates-list/index.html","searchKeys":["ResourcesTemplatesList","ResourcesTemplatesList","org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesTemplatesList"]},{"name":"ResourcesUnsubscribe","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesUnsubscribe","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-resources-unsubscribe/index.html","searchKeys":["ResourcesUnsubscribe","ResourcesUnsubscribe","org.jetbrains.kotlinx.mcp.Method.Defined.ResourcesUnsubscribe"]},{"name":"RootsList","description":"org.jetbrains.kotlinx.mcp.Method.Defined.RootsList","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-roots-list/index.html","searchKeys":["RootsList","RootsList","org.jetbrains.kotlinx.mcp.Method.Defined.RootsList"]},{"name":"SamplingCreateMessage","description":"org.jetbrains.kotlinx.mcp.Method.Defined.SamplingCreateMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-sampling-create-message/index.html","searchKeys":["SamplingCreateMessage","SamplingCreateMessage","org.jetbrains.kotlinx.mcp.Method.Defined.SamplingCreateMessage"]},{"name":"ToolsCall","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ToolsCall","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-tools-call/index.html","searchKeys":["ToolsCall","ToolsCall","org.jetbrains.kotlinx.mcp.Method.Defined.ToolsCall"]},{"name":"ToolsList","description":"org.jetbrains.kotlinx.mcp.Method.Defined.ToolsList","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/-tools-list/index.html","searchKeys":["ToolsList","ToolsList","org.jetbrains.kotlinx.mcp.Method.Defined.ToolsList"]},{"name":"abstract class Protocol<SendRequestT : Request, SendNotificationT : Notification, SendResultT : RequestResult>(_options: ProtocolOptions?)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/index.html","searchKeys":["Protocol","abstract class Protocol<SendRequestT : Request, SendNotificationT : Notification, SendResultT : RequestResult>(_options: ProtocolOptions?)","org.jetbrains.kotlinx.mcp.shared.Protocol"]},{"name":"abstract class WebSocketMcpTransport : Transport","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/index.html","searchKeys":["WebSocketMcpTransport","abstract class WebSocketMcpTransport : Transport","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport"]},{"name":"abstract fun assertCapabilityForMethod(method: Method)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.assertCapabilityForMethod","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/assert-capability-for-method.html","searchKeys":["assertCapabilityForMethod","abstract fun assertCapabilityForMethod(method: Method)","org.jetbrains.kotlinx.mcp.shared.Protocol.assertCapabilityForMethod"]},{"name":"abstract fun assertRequestHandlerCapability(method: Method)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.assertRequestHandlerCapability","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/assert-request-handler-capability.html","searchKeys":["assertRequestHandlerCapability","abstract fun assertRequestHandlerCapability(method: Method)","org.jetbrains.kotlinx.mcp.shared.Protocol.assertRequestHandlerCapability"]},{"name":"abstract override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.PaginatedRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-paginated-request/_meta.html","searchKeys":["_meta","abstract override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.PaginatedRequest._meta"]},{"name":"abstract suspend fun close()","description":"org.jetbrains.kotlinx.mcp.shared.Transport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/close.html","searchKeys":["close","abstract suspend fun close()","org.jetbrains.kotlinx.mcp.shared.Transport.close"]},{"name":"abstract suspend fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.shared.Transport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/send.html","searchKeys":["send","abstract suspend fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.shared.Transport.send"]},{"name":"abstract suspend fun start()","description":"org.jetbrains.kotlinx.mcp.shared.Transport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/start.html","searchKeys":["start","abstract suspend fun start()","org.jetbrains.kotlinx.mcp.shared.Transport.start"]},{"name":"abstract val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.WithMeta._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-with-meta/_meta.html","searchKeys":["_meta","abstract val _meta: JsonObject","org.jetbrains.kotlinx.mcp.WithMeta._meta"]},{"name":"abstract val code: Int","description":"org.jetbrains.kotlinx.mcp.ErrorCode.code","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/code.html","searchKeys":["code","abstract val code: Int","org.jetbrains.kotlinx.mcp.ErrorCode.code"]},{"name":"abstract val content: List<PromptMessageContent>","description":"org.jetbrains.kotlinx.mcp.CallToolResultBase.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result-base/content.html","searchKeys":["content","abstract val content: List<PromptMessageContent>","org.jetbrains.kotlinx.mcp.CallToolResultBase.content"]},{"name":"abstract val cursor: Cursor?","description":"org.jetbrains.kotlinx.mcp.PaginatedRequest.cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-paginated-request/cursor.html","searchKeys":["cursor","abstract val cursor: Cursor?","org.jetbrains.kotlinx.mcp.PaginatedRequest.cursor"]},{"name":"abstract val method: Method","description":"org.jetbrains.kotlinx.mcp.Notification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-notification/method.html","searchKeys":["method","abstract val method: Method","org.jetbrains.kotlinx.mcp.Notification.method"]},{"name":"abstract val method: Method","description":"org.jetbrains.kotlinx.mcp.Request.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-request/method.html","searchKeys":["method","abstract val method: Method","org.jetbrains.kotlinx.mcp.Request.method"]},{"name":"abstract val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.ResourceContents.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-contents/mime-type.html","searchKeys":["mimeType","abstract val mimeType: String?","org.jetbrains.kotlinx.mcp.ResourceContents.mimeType"]},{"name":"abstract val nextCursor: Cursor?","description":"org.jetbrains.kotlinx.mcp.PaginatedResult.nextCursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-paginated-result/next-cursor.html","searchKeys":["nextCursor","abstract val nextCursor: Cursor?","org.jetbrains.kotlinx.mcp.PaginatedResult.nextCursor"]},{"name":"abstract val progress: Int","description":"org.jetbrains.kotlinx.mcp.ProgressBase.progress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-base/progress.html","searchKeys":["progress","abstract val progress: Int","org.jetbrains.kotlinx.mcp.ProgressBase.progress"]},{"name":"abstract val total: Double?","description":"org.jetbrains.kotlinx.mcp.ProgressBase.total","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-base/total.html","searchKeys":["total","abstract val total: Double?","org.jetbrains.kotlinx.mcp.ProgressBase.total"]},{"name":"abstract val type: String","description":"org.jetbrains.kotlinx.mcp.PromptMessageContent.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message-content/type.html","searchKeys":["type","abstract val type: String","org.jetbrains.kotlinx.mcp.PromptMessageContent.type"]},{"name":"abstract val type: String","description":"org.jetbrains.kotlinx.mcp.Reference.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-reference/type.html","searchKeys":["type","abstract val type: String","org.jetbrains.kotlinx.mcp.Reference.type"]},{"name":"abstract val uri: String","description":"org.jetbrains.kotlinx.mcp.ResourceContents.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-contents/uri.html","searchKeys":["uri","abstract val uri: String","org.jetbrains.kotlinx.mcp.ResourceContents.uri"]},{"name":"abstract val value: String","description":"org.jetbrains.kotlinx.mcp.Method.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/value.html","searchKeys":["value","abstract val value: String","org.jetbrains.kotlinx.mcp.Method.value"]},{"name":"abstract val value: String","description":"org.jetbrains.kotlinx.mcp.StopReason.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/value.html","searchKeys":["value","abstract val value: String","org.jetbrains.kotlinx.mcp.StopReason.value"]},{"name":"abstract var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.Transport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/on-close.html","searchKeys":["onClose","abstract var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.shared.Transport.onClose"]},{"name":"abstract var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.Transport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/on-error.html","searchKeys":["onError","abstract var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.shared.Transport.onError"]},{"name":"abstract var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.Transport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/on-message.html","searchKeys":["onMessage","abstract var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.shared.Transport.onMessage"]},{"name":"alert","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.alert","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/alert/index.html","searchKeys":["alert","alert","org.jetbrains.kotlinx.mcp.LoggingLevel.alert"]},{"name":"allServers","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.allServers","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/all-servers/index.html","searchKeys":["allServers","allServers","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.allServers"]},{"name":"assistant","description":"org.jetbrains.kotlinx.mcp.Role.assistant","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/assistant/index.html","searchKeys":["assistant","assistant","org.jetbrains.kotlinx.mcp.Role.assistant"]},{"name":"class CallToolResult(val content: List<PromptMessageContent>, val isError: Boolean? = false, val _meta: JsonObject = EmptyJsonObject) : CallToolResultBase","description":"org.jetbrains.kotlinx.mcp.CallToolResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result/index.html","searchKeys":["CallToolResult","class CallToolResult(val content: List<PromptMessageContent>, val isError: Boolean? = false, val _meta: JsonObject = EmptyJsonObject) : CallToolResultBase","org.jetbrains.kotlinx.mcp.CallToolResult"]},{"name":"class ClientOptions(val capabilities: ClientCapabilities = ClientCapabilities(), var enforceStrictCapabilities: Boolean = true) : ProtocolOptions","description":"org.jetbrains.kotlinx.mcp.client.ClientOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client-options/index.html","searchKeys":["ClientOptions","class ClientOptions(val capabilities: ClientCapabilities = ClientCapabilities(), var enforceStrictCapabilities: Boolean = true) : ProtocolOptions","org.jetbrains.kotlinx.mcp.client.ClientOptions"]},{"name":"class CompatibilityCallToolResult(val content: List<PromptMessageContent>, val isError: Boolean? = false, val _meta: JsonObject = EmptyJsonObject, val toolResult: JsonObject = EmptyJsonObject) : CallToolResultBase","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/index.html","searchKeys":["CompatibilityCallToolResult","class CompatibilityCallToolResult(val content: List<PromptMessageContent>, val isError: Boolean? = false, val _meta: JsonObject = EmptyJsonObject, val toolResult: JsonObject = EmptyJsonObject) : CallToolResultBase","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult"]},{"name":"class Completion(val values: List<String>, val total: Int?, val hasMore: Boolean?)","description":"org.jetbrains.kotlinx.mcp.CompleteResult.Completion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-completion/index.html","searchKeys":["Completion","class Completion(val values: List<String>, val total: Int?, val hasMore: Boolean?)","org.jetbrains.kotlinx.mcp.CompleteResult.Completion"]},{"name":"class CustomMeta(val _meta: JsonObject = EmptyJsonObject) : WithMeta","description":"org.jetbrains.kotlinx.mcp.CustomMeta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-meta/index.html","searchKeys":["CustomMeta","class CustomMeta(val _meta: JsonObject = EmptyJsonObject) : WithMeta","org.jetbrains.kotlinx.mcp.CustomMeta"]},{"name":"class GetPromptResult(val description: String?, val messages: List<PromptMessage>, val _meta: JsonObject = EmptyJsonObject) : ServerResult","description":"org.jetbrains.kotlinx.mcp.GetPromptResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-result/index.html","searchKeys":["GetPromptResult","class GetPromptResult(val description: String?, val messages: List<PromptMessage>, val _meta: JsonObject = EmptyJsonObject) : ServerResult","org.jetbrains.kotlinx.mcp.GetPromptResult"]},{"name":"class InitializedNotification : ClientNotification","description":"org.jetbrains.kotlinx.mcp.InitializedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialized-notification/index.html","searchKeys":["InitializedNotification","class InitializedNotification : ClientNotification","org.jetbrains.kotlinx.mcp.InitializedNotification"]},{"name":"class JSONRPCResponse(val id: RequestId, val jsonrpc: String = JSONRPC_VERSION, val result: RequestResult? = null, val error: JSONRPCError? = null) : JSONRPCMessage","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/index.html","searchKeys":["JSONRPCResponse","class JSONRPCResponse(val id: RequestId, val jsonrpc: String = JSONRPC_VERSION, val result: RequestResult? = null, val error: JSONRPCError? = null) : JSONRPCMessage","org.jetbrains.kotlinx.mcp.JSONRPCResponse"]},{"name":"class ListPromptsResult(val prompts: List<Prompt>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","description":"org.jetbrains.kotlinx.mcp.ListPromptsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-result/index.html","searchKeys":["ListPromptsResult","class ListPromptsResult(val prompts: List<Prompt>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","org.jetbrains.kotlinx.mcp.ListPromptsResult"]},{"name":"class ListResourceTemplatesResult(val resourceTemplates: List<ResourceTemplate>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-result/index.html","searchKeys":["ListResourceTemplatesResult","class ListResourceTemplatesResult(val resourceTemplates: List<ResourceTemplate>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult"]},{"name":"class ListResourcesResult(val resources: List<Resource>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","description":"org.jetbrains.kotlinx.mcp.ListResourcesResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-result/index.html","searchKeys":["ListResourcesResult","class ListResourcesResult(val resources: List<Resource>, val nextCursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","org.jetbrains.kotlinx.mcp.ListResourcesResult"]},{"name":"class ListRootsRequest(val _meta: JsonObject = EmptyJsonObject) : ServerRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.ListRootsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-request/index.html","searchKeys":["ListRootsRequest","class ListRootsRequest(val _meta: JsonObject = EmptyJsonObject) : ServerRequest, WithMeta","org.jetbrains.kotlinx.mcp.ListRootsRequest"]},{"name":"class ListRootsResult(val roots: List<Root>, val _meta: JsonObject = EmptyJsonObject) : ClientResult","description":"org.jetbrains.kotlinx.mcp.ListRootsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-result/index.html","searchKeys":["ListRootsResult","class ListRootsResult(val roots: List<Root>, val _meta: JsonObject = EmptyJsonObject) : ClientResult","org.jetbrains.kotlinx.mcp.ListRootsResult"]},{"name":"class ListToolsResult(val tools: List<Tool>, val nextCursor: Cursor?, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","description":"org.jetbrains.kotlinx.mcp.ListToolsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-result/index.html","searchKeys":["ListToolsResult","class ListToolsResult(val tools: List<Tool>, val nextCursor: Cursor?, val _meta: JsonObject = EmptyJsonObject) : ServerResult, PaginatedResult","org.jetbrains.kotlinx.mcp.ListToolsResult"]},{"name":"class McpError(val code: Int, message: String, val data: JsonObject = EmptyJsonObject) : Exception","description":"org.jetbrains.kotlinx.mcp.McpError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-mcp-error/index.html","searchKeys":["McpError","class McpError(val code: Int, message: String, val data: JsonObject = EmptyJsonObject) : Exception","org.jetbrains.kotlinx.mcp.McpError"]},{"name":"class ModelPreferences(val hints: List<ModelHint>?, val costPriority: Double?, val speedPriority: Double?, val intelligencePriority: Double?)","description":"org.jetbrains.kotlinx.mcp.ModelPreferences","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/index.html","searchKeys":["ModelPreferences","class ModelPreferences(val hints: List<ModelHint>?, val costPriority: Double?, val speedPriority: Double?, val intelligencePriority: Double?)","org.jetbrains.kotlinx.mcp.ModelPreferences"]},{"name":"class PingRequest : ServerRequest, ClientRequest","description":"org.jetbrains.kotlinx.mcp.PingRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-ping-request/index.html","searchKeys":["PingRequest","class PingRequest : ServerRequest, ClientRequest","org.jetbrains.kotlinx.mcp.PingRequest"]},{"name":"class Prompt(val name: String, val description: String?, val arguments: List<PromptArgument>?)","description":"org.jetbrains.kotlinx.mcp.Prompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt/index.html","searchKeys":["Prompt","class Prompt(val name: String, val description: String?, val arguments: List<PromptArgument>?)","org.jetbrains.kotlinx.mcp.Prompt"]},{"name":"class PromptListChangedNotification : ServerNotification","description":"org.jetbrains.kotlinx.mcp.PromptListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-list-changed-notification/index.html","searchKeys":["PromptListChangedNotification","class PromptListChangedNotification : ServerNotification","org.jetbrains.kotlinx.mcp.PromptListChangedNotification"]},{"name":"class ReadBuffer","description":"org.jetbrains.kotlinx.mcp.shared.ReadBuffer","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-read-buffer/index.html","searchKeys":["ReadBuffer","class ReadBuffer","org.jetbrains.kotlinx.mcp.shared.ReadBuffer"]},{"name":"class ReadResourceResult(val contents: List<ResourceContents>, val _meta: JsonObject = EmptyJsonObject) : ServerResult","description":"org.jetbrains.kotlinx.mcp.ReadResourceResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-result/index.html","searchKeys":["ReadResourceResult","class ReadResourceResult(val contents: List<ResourceContents>, val _meta: JsonObject = EmptyJsonObject) : ServerResult","org.jetbrains.kotlinx.mcp.ReadResourceResult"]},{"name":"class RequestHandlerExtra","description":"org.jetbrains.kotlinx.mcp.shared.RequestHandlerExtra","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-handler-extra/index.html","searchKeys":["RequestHandlerExtra","class RequestHandlerExtra","org.jetbrains.kotlinx.mcp.shared.RequestHandlerExtra"]},{"name":"class ResourceListChangedNotification : ServerNotification","description":"org.jetbrains.kotlinx.mcp.ResourceListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-list-changed-notification/index.html","searchKeys":["ResourceListChangedNotification","class ResourceListChangedNotification : ServerNotification","org.jetbrains.kotlinx.mcp.ResourceListChangedNotification"]},{"name":"class RootsListChangedNotification : ClientNotification","description":"org.jetbrains.kotlinx.mcp.RootsListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-roots-list-changed-notification/index.html","searchKeys":["RootsListChangedNotification","class RootsListChangedNotification : ClientNotification","org.jetbrains.kotlinx.mcp.RootsListChangedNotification"]},{"name":"class SSEClientTransport(client: HttpClient, urlString: String?, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}) : Transport","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/index.html","searchKeys":["SSEClientTransport","class SSEClientTransport(client: HttpClient, urlString: String?, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}) : Transport","org.jetbrains.kotlinx.mcp.client.SSEClientTransport"]},{"name":"class SSEServerTransport(endpoint: String, session: ServerSSESession) : Transport","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/index.html","searchKeys":["SSEServerTransport","class SSEServerTransport(endpoint: String, session: ServerSSESession) : Transport","org.jetbrains.kotlinx.mcp.server.SSEServerTransport"]},{"name":"class ServerOptions(val capabilities: ServerCapabilities, var enforceStrictCapabilities: Boolean = true) : ProtocolOptions","description":"org.jetbrains.kotlinx.mcp.server.ServerOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server-options/index.html","searchKeys":["ServerOptions","class ServerOptions(val capabilities: ServerCapabilities, var enforceStrictCapabilities: Boolean = true) : ProtocolOptions","org.jetbrains.kotlinx.mcp.server.ServerOptions"]},{"name":"class StdioClientTransport(input: InputStream, output: OutputStream) : Transport","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/index.html","searchKeys":["StdioClientTransport","class StdioClientTransport(input: InputStream, output: OutputStream) : Transport","org.jetbrains.kotlinx.mcp.client.StdioClientTransport"]},{"name":"class StdioServerTransport(inputStream: BufferedInputStream = BufferedInputStream(System.`in`), outputStream: PrintStream = System.out) : Transport","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/index.html","searchKeys":["StdioServerTransport","class StdioServerTransport(inputStream: BufferedInputStream = BufferedInputStream(System.`in`), outputStream: PrintStream = System.out) : Transport","org.jetbrains.kotlinx.mcp.server.StdioServerTransport"]},{"name":"class ToolListChangedNotification : ServerNotification","description":"org.jetbrains.kotlinx.mcp.ToolListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool-list-changed-notification/index.html","searchKeys":["ToolListChangedNotification","class ToolListChangedNotification : ServerNotification","org.jetbrains.kotlinx.mcp.ToolListChangedNotification"]},{"name":"class WebSocketClientTransport(client: HttpClient, urlString: String?, requestBuilder: HttpRequestBuilder.() -> Unit = {}) : WebSocketMcpTransport","description":"org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-web-socket-client-transport/index.html","searchKeys":["WebSocketClientTransport","class WebSocketClientTransport(client: HttpClient, urlString: String?, requestBuilder: HttpRequestBuilder.() -> Unit = {}) : WebSocketMcpTransport","org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport"]},{"name":"class WebSocketMcpServerTransport(session: WebSocketServerSession) : WebSocketMcpTransport","description":"org.jetbrains.kotlinx.mcp.server.WebSocketMcpServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-web-socket-mcp-server-transport/index.html","searchKeys":["WebSocketMcpServerTransport","class WebSocketMcpServerTransport(session: WebSocketServerSession) : WebSocketMcpTransport","org.jetbrains.kotlinx.mcp.server.WebSocketMcpServerTransport"]},{"name":"const val JSONRPC_VERSION: String","description":"org.jetbrains.kotlinx.mcp.JSONRPC_VERSION","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c_-v-e-r-s-i-o-n.html","searchKeys":["JSONRPC_VERSION","const val JSONRPC_VERSION: String","org.jetbrains.kotlinx.mcp.JSONRPC_VERSION"]},{"name":"const val LATEST_PROTOCOL_VERSION: String","description":"org.jetbrains.kotlinx.mcp.LATEST_PROTOCOL_VERSION","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-l-a-t-e-s-t_-p-r-o-t-o-c-o-l_-v-e-r-s-i-o-n.html","searchKeys":["LATEST_PROTOCOL_VERSION","const val LATEST_PROTOCOL_VERSION: String","org.jetbrains.kotlinx.mcp.LATEST_PROTOCOL_VERSION"]},{"name":"const val LIB_VERSION: String","description":"shared.LIB_VERSION","location":"-m-c-p -kotlin -s-d-k/shared/-l-i-b_-v-e-r-s-i-o-n.html","searchKeys":["LIB_VERSION","const val LIB_VERSION: String","shared.LIB_VERSION"]},{"name":"const val TYPE: String","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource.Companion.TYPE","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","org.jetbrains.kotlinx.mcp.EmbeddedResource.Companion.TYPE"]},{"name":"const val TYPE: String","description":"org.jetbrains.kotlinx.mcp.ImageContent.Companion.TYPE","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","org.jetbrains.kotlinx.mcp.ImageContent.Companion.TYPE"]},{"name":"const val TYPE: String","description":"org.jetbrains.kotlinx.mcp.PromptReference.Companion.TYPE","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","org.jetbrains.kotlinx.mcp.PromptReference.Companion.TYPE"]},{"name":"const val TYPE: String","description":"org.jetbrains.kotlinx.mcp.ResourceReference.Companion.TYPE","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","org.jetbrains.kotlinx.mcp.ResourceReference.Companion.TYPE"]},{"name":"const val TYPE: String","description":"org.jetbrains.kotlinx.mcp.TextContent.Companion.TYPE","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/-companion/-t-y-p-e.html","searchKeys":["TYPE","const val TYPE: String","org.jetbrains.kotlinx.mcp.TextContent.Companion.TYPE"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.InitializedNotification.InitializedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialized-notification/-initialized-notification.html","searchKeys":["InitializedNotification","constructor()","org.jetbrains.kotlinx.mcp.InitializedNotification.InitializedNotification"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.PingRequest.PingRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-ping-request/-ping-request.html","searchKeys":["PingRequest","constructor()","org.jetbrains.kotlinx.mcp.PingRequest.PingRequest"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.PromptListChangedNotification.PromptListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-list-changed-notification/-prompt-list-changed-notification.html","searchKeys":["PromptListChangedNotification","constructor()","org.jetbrains.kotlinx.mcp.PromptListChangedNotification.PromptListChangedNotification"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.ResourceListChangedNotification.ResourceListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-list-changed-notification/-resource-list-changed-notification.html","searchKeys":["ResourceListChangedNotification","constructor()","org.jetbrains.kotlinx.mcp.ResourceListChangedNotification.ResourceListChangedNotification"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.RootsListChangedNotification.RootsListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-roots-list-changed-notification/-roots-list-changed-notification.html","searchKeys":["RootsListChangedNotification","constructor()","org.jetbrains.kotlinx.mcp.RootsListChangedNotification.RootsListChangedNotification"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.ToolListChangedNotification.ToolListChangedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool-list-changed-notification/-tool-list-changed-notification.html","searchKeys":["ToolListChangedNotification","constructor()","org.jetbrains.kotlinx.mcp.ToolListChangedNotification.ToolListChangedNotification"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.shared.ReadBuffer.ReadBuffer","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-read-buffer/-read-buffer.html","searchKeys":["ReadBuffer","constructor()","org.jetbrains.kotlinx.mcp.shared.ReadBuffer.ReadBuffer"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.shared.RequestHandlerExtra.RequestHandlerExtra","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-handler-extra/-request-handler-extra.html","searchKeys":["RequestHandlerExtra","constructor()","org.jetbrains.kotlinx.mcp.shared.RequestHandlerExtra.RequestHandlerExtra"]},{"name":"constructor()","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.WebSocketMcpTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/-web-socket-mcp-transport.html","searchKeys":["WebSocketMcpTransport","constructor()","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.WebSocketMcpTransport"]},{"name":"constructor(_meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CustomMeta.CustomMeta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-meta/-custom-meta.html","searchKeys":["CustomMeta","constructor(_meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CustomMeta.CustomMeta"]},{"name":"constructor(_meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.EmptyRequestResult.EmptyRequestResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-empty-request-result/-empty-request-result.html","searchKeys":["EmptyRequestResult","constructor(_meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.EmptyRequestResult.EmptyRequestResult"]},{"name":"constructor(_meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListRootsRequest.ListRootsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-request/-list-roots-request.html","searchKeys":["ListRootsRequest","constructor(_meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListRootsRequest.ListRootsRequest"]},{"name":"constructor(_options: ProtocolOptions?)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.Protocol","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/-protocol.html","searchKeys":["Protocol","constructor(_options: ProtocolOptions?)","org.jetbrains.kotlinx.mcp.shared.Protocol.Protocol"]},{"name":"constructor(blob: String, uri: String, mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.BlobResourceContents.BlobResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-blob-resource-contents/-blob-resource-contents.html","searchKeys":["BlobResourceContents","constructor(blob: String, uri: String, mimeType: String?)","org.jetbrains.kotlinx.mcp.BlobResourceContents.BlobResourceContents"]},{"name":"constructor(capabilities: ClientCapabilities = ClientCapabilities(), enforceStrictCapabilities: Boolean = true)","description":"org.jetbrains.kotlinx.mcp.client.ClientOptions.ClientOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client-options/-client-options.html","searchKeys":["ClientOptions","constructor(capabilities: ClientCapabilities = ClientCapabilities(), enforceStrictCapabilities: Boolean = true)","org.jetbrains.kotlinx.mcp.client.ClientOptions.ClientOptions"]},{"name":"constructor(capabilities: ServerCapabilities, enforceStrictCapabilities: Boolean = true)","description":"org.jetbrains.kotlinx.mcp.server.ServerOptions.ServerOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server-options/-server-options.html","searchKeys":["ServerOptions","constructor(capabilities: ServerCapabilities, enforceStrictCapabilities: Boolean = true)","org.jetbrains.kotlinx.mcp.server.ServerOptions.ServerOptions"]},{"name":"constructor(client: HttpClient, urlString: String?, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.SSEClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/-s-s-e-client-transport.html","searchKeys":["SSEClientTransport","constructor(client: HttpClient, urlString: String?, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {})","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.SSEClientTransport"]},{"name":"constructor(client: HttpClient, urlString: String?, requestBuilder: HttpRequestBuilder.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport.WebSocketClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-web-socket-client-transport/-web-socket-client-transport.html","searchKeys":["WebSocketClientTransport","constructor(client: HttpClient, urlString: String?, requestBuilder: HttpRequestBuilder.() -> Unit = {})","org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport.WebSocketClientTransport"]},{"name":"constructor(clientInfo: Implementation, options: ClientOptions = ClientOptions())","description":"org.jetbrains.kotlinx.mcp.client.Client.Client","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/-client.html","searchKeys":["Client","constructor(clientInfo: Implementation, options: ClientOptions = ClientOptions())","org.jetbrains.kotlinx.mcp.client.Client.Client"]},{"name":"constructor(code: ErrorCode, message: String, data: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.JSONRPCError.JSONRPCError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-error/-j-s-o-n-r-p-c-error.html","searchKeys":["JSONRPCError","constructor(code: ErrorCode, message: String, data: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.JSONRPCError.JSONRPCError"]},{"name":"constructor(code: Int)","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Unknown.Unknown","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-unknown/-unknown.html","searchKeys":["Unknown","constructor(code: Int)","org.jetbrains.kotlinx.mcp.ErrorCode.Unknown.Unknown"]},{"name":"constructor(code: Int, message: String, data: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.McpError.McpError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-mcp-error/-mcp-error.html","searchKeys":["McpError","constructor(code: Int, message: String, data: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.McpError.McpError"]},{"name":"constructor(completion: CompleteResult.Completion, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CompleteResult.CompleteResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-complete-result.html","searchKeys":["CompleteResult","constructor(completion: CompleteResult.Completion, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CompleteResult.CompleteResult"]},{"name":"constructor(content: List<PromptMessageContent>, isError: Boolean? = false, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CallToolResult.CallToolResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result/-call-tool-result.html","searchKeys":["CallToolResult","constructor(content: List<PromptMessageContent>, isError: Boolean? = false, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CallToolResult.CallToolResult"]},{"name":"constructor(content: List<PromptMessageContent>, isError: Boolean? = false, _meta: JsonObject = EmptyJsonObject, toolResult: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.CompatibilityCallToolResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/-compatibility-call-tool-result.html","searchKeys":["CompatibilityCallToolResult","constructor(content: List<PromptMessageContent>, isError: Boolean? = false, _meta: JsonObject = EmptyJsonObject, toolResult: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.CompatibilityCallToolResult"]},{"name":"constructor(contents: List<ResourceContents>, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ReadResourceResult.ReadResourceResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-result/-read-resource-result.html","searchKeys":["ReadResourceResult","constructor(contents: List<ResourceContents>, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ReadResourceResult.ReadResourceResult"]},{"name":"constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListPromptsRequest.ListPromptsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-request/-list-prompts-request.html","searchKeys":["ListPromptsRequest","constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListPromptsRequest.ListPromptsRequest"]},{"name":"constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListResourcesRequest.ListResourcesRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-request/-list-resources-request.html","searchKeys":["ListResourcesRequest","constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListResourcesRequest.ListResourcesRequest"]},{"name":"constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListToolsRequest.ListToolsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-request/-list-tools-request.html","searchKeys":["ListToolsRequest","constructor(cursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListToolsRequest.ListToolsRequest"]},{"name":"constructor(cursor: Cursor?, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.ListResourceTemplatesRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-request/-list-resource-templates-request.html","searchKeys":["ListResourceTemplatesRequest","constructor(cursor: Cursor?, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.ListResourceTemplatesRequest"]},{"name":"constructor(data: String, mimeType: String)","description":"org.jetbrains.kotlinx.mcp.ImageContent.ImageContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/-image-content.html","searchKeys":["ImageContent","constructor(data: String, mimeType: String)","org.jetbrains.kotlinx.mcp.ImageContent.ImageContent"]},{"name":"constructor(description: String?, messages: List<PromptMessage>, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.GetPromptResult.GetPromptResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-result/-get-prompt-result.html","searchKeys":["GetPromptResult","constructor(description: String?, messages: List<PromptMessage>, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.GetPromptResult.GetPromptResult"]},{"name":"constructor(endpoint: String, session: ServerSSESession)","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.SSEServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/-s-s-e-server-transport.html","searchKeys":["SSEServerTransport","constructor(endpoint: String, session: ServerSSESession)","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.SSEServerTransport"]},{"name":"constructor(enforceStrictCapabilities: Boolean = false, timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","description":"org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.ProtocolOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol-options/-protocol-options.html","searchKeys":["ProtocolOptions","constructor(enforceStrictCapabilities: Boolean = false, timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.ProtocolOptions"]},{"name":"constructor(experimental: JsonObject? = EmptyJsonObject, sampling: JsonObject? = EmptyJsonObject, logging: JsonObject? = EmptyJsonObject, prompts: ServerCapabilities.Prompts? = null, resources: ServerCapabilities.Resources? = null, tools: ServerCapabilities.Tools? = null)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.ServerCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-server-capabilities.html","searchKeys":["ServerCapabilities","constructor(experimental: JsonObject? = EmptyJsonObject, sampling: JsonObject? = EmptyJsonObject, logging: JsonObject? = EmptyJsonObject, prompts: ServerCapabilities.Prompts? = null, resources: ServerCapabilities.Resources? = null, tools: ServerCapabilities.Tools? = null)","org.jetbrains.kotlinx.mcp.ServerCapabilities.ServerCapabilities"]},{"name":"constructor(experimental: JsonObject? = EmptyJsonObject, sampling: JsonObject? = EmptyJsonObject, roots: ClientCapabilities.Roots? = null)","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.ClientCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/-client-capabilities.html","searchKeys":["ClientCapabilities","constructor(experimental: JsonObject? = EmptyJsonObject, sampling: JsonObject? = EmptyJsonObject, roots: ClientCapabilities.Roots? = null)","org.jetbrains.kotlinx.mcp.ClientCapabilities.ClientCapabilities"]},{"name":"constructor(hints: List<ModelHint>?, costPriority: Double?, speedPriority: Double?, intelligencePriority: Double?)","description":"org.jetbrains.kotlinx.mcp.ModelPreferences.ModelPreferences","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/-model-preferences.html","searchKeys":["ModelPreferences","constructor(hints: List<ModelHint>?, costPriority: Double?, speedPriority: Double?, intelligencePriority: Double?)","org.jetbrains.kotlinx.mcp.ModelPreferences.ModelPreferences"]},{"name":"constructor(id: RequestId = REQUEST_MESSAGE_ID.incrementAndGet(), method: String, params: JsonElement? = null, jsonrpc: String = JSONRPC_VERSION)","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest.JSONRPCRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/-j-s-o-n-r-p-c-request.html","searchKeys":["JSONRPCRequest","constructor(id: RequestId = REQUEST_MESSAGE_ID.incrementAndGet(), method: String, params: JsonElement? = null, jsonrpc: String = JSONRPC_VERSION)","org.jetbrains.kotlinx.mcp.JSONRPCRequest.JSONRPCRequest"]},{"name":"constructor(id: RequestId, jsonrpc: String = JSONRPC_VERSION, result: RequestResult? = null, error: JSONRPCError? = null)","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse.JSONRPCResponse","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/-j-s-o-n-r-p-c-response.html","searchKeys":["JSONRPCResponse","constructor(id: RequestId, jsonrpc: String = JSONRPC_VERSION, result: RequestResult? = null, error: JSONRPCError? = null)","org.jetbrains.kotlinx.mcp.JSONRPCResponse.JSONRPCResponse"]},{"name":"constructor(input: InputStream, output: OutputStream)","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.StdioClientTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/-stdio-client-transport.html","searchKeys":["StdioClientTransport","constructor(input: InputStream, output: OutputStream)","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.StdioClientTransport"]},{"name":"constructor(inputStream: BufferedInputStream = BufferedInputStream(System.`in`), outputStream: PrintStream = System.out)","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.StdioServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/-stdio-server-transport.html","searchKeys":["StdioServerTransport","constructor(inputStream: BufferedInputStream = BufferedInputStream(System.`in`), outputStream: PrintStream = System.out)","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.StdioServerTransport"]},{"name":"constructor(level: LoggingLevel, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.SetLevelRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-set-level-request/-set-level-request.html","searchKeys":["SetLevelRequest","constructor(level: LoggingLevel, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.SetLevelRequest"]},{"name":"constructor(level: LoggingLevel, logger: String? = null, data: JsonObject = EmptyJsonObject, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.LoggingMessageNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-logging-message-notification.html","searchKeys":["LoggingMessageNotification","constructor(level: LoggingLevel, logger: String? = null, data: JsonObject = EmptyJsonObject, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.LoggingMessageNotification"]},{"name":"constructor(listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots.Roots","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/-roots/-roots.html","searchKeys":["Roots","constructor(listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots.Roots"]},{"name":"constructor(listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts.Prompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-prompts/-prompts.html","searchKeys":["Prompts","constructor(listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts.Prompts"]},{"name":"constructor(listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools.Tools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-tools/-tools.html","searchKeys":["Tools","constructor(listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools.Tools"]},{"name":"constructor(messages: List<SamplingMessage>, systemPrompt: String?, includeContext: CreateMessageRequest.IncludeContext?, temperature: Double?, maxTokens: Int, stopSequences: List<String>?, metadata: JsonObject = EmptyJsonObject, modelPreferences: ModelPreferences?, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.CreateMessageRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-create-message-request.html","searchKeys":["CreateMessageRequest","constructor(messages: List<SamplingMessage>, systemPrompt: String?, includeContext: CreateMessageRequest.IncludeContext?, temperature: Double?, maxTokens: Int, stopSequences: List<String>?, metadata: JsonObject = EmptyJsonObject, modelPreferences: ModelPreferences?, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CreateMessageRequest.CreateMessageRequest"]},{"name":"constructor(method: Method)","description":"org.jetbrains.kotlinx.mcp.CustomRequest.CustomRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-request/-custom-request.html","searchKeys":["CustomRequest","constructor(method: Method)","org.jetbrains.kotlinx.mcp.CustomRequest.CustomRequest"]},{"name":"constructor(method: Method)","description":"org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification.UnknownMethodRequestOrNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-method-request-or-notification/-unknown-method-request-or-notification.html","searchKeys":["UnknownMethodRequestOrNotification","constructor(method: Method)","org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification.UnknownMethodRequestOrNotification"]},{"name":"constructor(method: String, params: JsonElement = EmptyJsonObject, jsonrpc: String = JSONRPC_VERSION)","description":"org.jetbrains.kotlinx.mcp.JSONRPCNotification.JSONRPCNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-notification/-j-s-o-n-r-p-c-notification.html","searchKeys":["JSONRPCNotification","constructor(method: String, params: JsonElement = EmptyJsonObject, jsonrpc: String = JSONRPC_VERSION)","org.jetbrains.kotlinx.mcp.JSONRPCNotification.JSONRPCNotification"]},{"name":"constructor(model: String, stopReason: StopReason? = null, role: Role, content: PromptMessageContentTextOrImage, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult.CreateMessageResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/-create-message-result.html","searchKeys":["CreateMessageResult","constructor(model: String, stopReason: StopReason? = null, role: Role, content: PromptMessageContentTextOrImage, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CreateMessageResult.CreateMessageResult"]},{"name":"constructor(name: String)","description":"org.jetbrains.kotlinx.mcp.PromptReference.PromptReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/-prompt-reference.html","searchKeys":["PromptReference","constructor(name: String)","org.jetbrains.kotlinx.mcp.PromptReference.PromptReference"]},{"name":"constructor(name: String, arguments: JsonObject = EmptyJsonObject, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CallToolRequest.CallToolRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/-call-tool-request.html","searchKeys":["CallToolRequest","constructor(name: String, arguments: JsonObject = EmptyJsonObject, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CallToolRequest.CallToolRequest"]},{"name":"constructor(name: String, arguments: Map<String, String>?, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest.GetPromptRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/-get-prompt-request.html","searchKeys":["GetPromptRequest","constructor(name: String, arguments: Map<String, String>?, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.GetPromptRequest.GetPromptRequest"]},{"name":"constructor(name: String, description: String?, arguments: List<PromptArgument>?)","description":"org.jetbrains.kotlinx.mcp.Prompt.Prompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt/-prompt.html","searchKeys":["Prompt","constructor(name: String, description: String?, arguments: List<PromptArgument>?)","org.jetbrains.kotlinx.mcp.Prompt.Prompt"]},{"name":"constructor(name: String, description: String?, inputSchema: Tool.Input)","description":"org.jetbrains.kotlinx.mcp.Tool.Tool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/-tool.html","searchKeys":["Tool","constructor(name: String, description: String?, inputSchema: Tool.Input)","org.jetbrains.kotlinx.mcp.Tool.Tool"]},{"name":"constructor(name: String, description: String?, required: Boolean?)","description":"org.jetbrains.kotlinx.mcp.PromptArgument.PromptArgument","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-argument/-prompt-argument.html","searchKeys":["PromptArgument","constructor(name: String, description: String?, required: Boolean?)","org.jetbrains.kotlinx.mcp.PromptArgument.PromptArgument"]},{"name":"constructor(name: String, value: String)","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.Argument","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/-argument/-argument.html","searchKeys":["Argument","constructor(name: String, value: String)","org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.Argument"]},{"name":"constructor(name: String, version: String)","description":"org.jetbrains.kotlinx.mcp.Implementation.Implementation","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-implementation/-implementation.html","searchKeys":["Implementation","constructor(name: String, version: String)","org.jetbrains.kotlinx.mcp.Implementation.Implementation"]},{"name":"constructor(name: String?)","description":"org.jetbrains.kotlinx.mcp.ModelHint.ModelHint","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-hint/-model-hint.html","searchKeys":["ModelHint","constructor(name: String?)","org.jetbrains.kotlinx.mcp.ModelHint.ModelHint"]},{"name":"constructor(onProgress: ProgressCallback? = null, timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","description":"org.jetbrains.kotlinx.mcp.shared.RequestOptions.RequestOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-options/-request-options.html","searchKeys":["RequestOptions","constructor(onProgress: ProgressCallback? = null, timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","org.jetbrains.kotlinx.mcp.shared.RequestOptions.RequestOptions"]},{"name":"constructor(progress: Int, progressToken: ProgressToken, _meta: JsonObject = EmptyJsonObject, total: Double?)","description":"org.jetbrains.kotlinx.mcp.ProgressNotification.ProgressNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/-progress-notification.html","searchKeys":["ProgressNotification","constructor(progress: Int, progressToken: ProgressToken, _meta: JsonObject = EmptyJsonObject, total: Double?)","org.jetbrains.kotlinx.mcp.ProgressNotification.ProgressNotification"]},{"name":"constructor(progress: Int, total: Double?)","description":"org.jetbrains.kotlinx.mcp.Progress.Progress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress/-progress.html","searchKeys":["Progress","constructor(progress: Int, total: Double?)","org.jetbrains.kotlinx.mcp.Progress.Progress"]},{"name":"constructor(prompt: Prompt, messageProvider: suspend (GetPromptRequest) -> GetPromptResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.RegisteredPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-prompt/-registered-prompt.html","searchKeys":["RegisteredPrompt","constructor(prompt: Prompt, messageProvider: suspend (GetPromptRequest) -> GetPromptResult)","org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.RegisteredPrompt"]},{"name":"constructor(prompts: List<Prompt>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListPromptsResult.ListPromptsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-result/-list-prompts-result.html","searchKeys":["ListPromptsResult","constructor(prompts: List<Prompt>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListPromptsResult.ListPromptsResult"]},{"name":"constructor(properties: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.Tool.Input.Input","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/-input/-input.html","searchKeys":["Input","constructor(properties: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.Tool.Input.Input"]},{"name":"constructor(protocolVersion: String = LATEST_PROTOCOL_VERSION, capabilities: ServerCapabilities = ServerCapabilities(), serverInfo: Implementation, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.InitializeResult.InitializeResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/-initialize-result.html","searchKeys":["InitializeResult","constructor(protocolVersion: String = LATEST_PROTOCOL_VERSION, capabilities: ServerCapabilities = ServerCapabilities(), serverInfo: Implementation, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.InitializeResult.InitializeResult"]},{"name":"constructor(protocolVersion: String, capabilities: ClientCapabilities, clientInfo: Implementation, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.InitializeRequest.InitializeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/-initialize-request.html","searchKeys":["InitializeRequest","constructor(protocolVersion: String, capabilities: ClientCapabilities, clientInfo: Implementation, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.InitializeRequest.InitializeRequest"]},{"name":"constructor(ref: Reference, argument: CompleteRequest.Argument, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.CompleteRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/-complete-request.html","searchKeys":["CompleteRequest","constructor(ref: Reference, argument: CompleteRequest.Argument, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CompleteRequest.CompleteRequest"]},{"name":"constructor(requestId: RequestId, reason: String?, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.CancelledNotification.CancelledNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/-cancelled-notification.html","searchKeys":["CancelledNotification","constructor(requestId: RequestId, reason: String?, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.CancelledNotification.CancelledNotification"]},{"name":"constructor(resource: Resource, readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredResource.RegisteredResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-resource/-registered-resource.html","searchKeys":["RegisteredResource","constructor(resource: Resource, readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","org.jetbrains.kotlinx.mcp.server.RegisteredResource.RegisteredResource"]},{"name":"constructor(resource: ResourceContents)","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource.EmbeddedResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/-embedded-resource.html","searchKeys":["EmbeddedResource","constructor(resource: ResourceContents)","org.jetbrains.kotlinx.mcp.EmbeddedResource.EmbeddedResource"]},{"name":"constructor(resourceTemplates: List<ResourceTemplate>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.ListResourceTemplatesResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-result/-list-resource-templates-result.html","searchKeys":["ListResourceTemplatesResult","constructor(resourceTemplates: List<ResourceTemplate>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.ListResourceTemplatesResult"]},{"name":"constructor(resources: List<Resource>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListResourcesResult.ListResourcesResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-result/-list-resources-result.html","searchKeys":["ListResourcesResult","constructor(resources: List<Resource>, nextCursor: Cursor? = null, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListResourcesResult.ListResourcesResult"]},{"name":"constructor(role: Role, content: PromptMessageContent)","description":"org.jetbrains.kotlinx.mcp.PromptMessage.PromptMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message/-prompt-message.html","searchKeys":["PromptMessage","constructor(role: Role, content: PromptMessageContent)","org.jetbrains.kotlinx.mcp.PromptMessage.PromptMessage"]},{"name":"constructor(role: Role, content: PromptMessageContentTextOrImage)","description":"org.jetbrains.kotlinx.mcp.SamplingMessage.SamplingMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-sampling-message/-sampling-message.html","searchKeys":["SamplingMessage","constructor(role: Role, content: PromptMessageContentTextOrImage)","org.jetbrains.kotlinx.mcp.SamplingMessage.SamplingMessage"]},{"name":"constructor(roots: List<Root>, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListRootsResult.ListRootsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-result/-list-roots-result.html","searchKeys":["ListRootsResult","constructor(roots: List<Root>, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListRootsResult.ListRootsResult"]},{"name":"constructor(serverInfo: Implementation, options: ServerOptions, onCloseCallback: () -> Unit? = null)","description":"org.jetbrains.kotlinx.mcp.server.Server.Server","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/-server.html","searchKeys":["Server","constructor(serverInfo: Implementation, options: ServerOptions, onCloseCallback: () -> Unit? = null)","org.jetbrains.kotlinx.mcp.server.Server.Server"]},{"name":"constructor(session: WebSocketServerSession)","description":"org.jetbrains.kotlinx.mcp.server.WebSocketMcpServerTransport.WebSocketMcpServerTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-web-socket-mcp-server-transport/-web-socket-mcp-server-transport.html","searchKeys":["WebSocketMcpServerTransport","constructor(session: WebSocketServerSession)","org.jetbrains.kotlinx.mcp.server.WebSocketMcpServerTransport.WebSocketMcpServerTransport"]},{"name":"constructor(subscribe: Boolean?, listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.Resources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-resources/-resources.html","searchKeys":["Resources","constructor(subscribe: Boolean?, listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.Resources"]},{"name":"constructor(text: String, uri: String, mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.TextResourceContents.TextResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-resource-contents/-text-resource-contents.html","searchKeys":["TextResourceContents","constructor(text: String, uri: String, mimeType: String?)","org.jetbrains.kotlinx.mcp.TextResourceContents.TextResourceContents"]},{"name":"constructor(text: String? = null)","description":"org.jetbrains.kotlinx.mcp.TextContent.TextContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/-text-content.html","searchKeys":["TextContent","constructor(text: String? = null)","org.jetbrains.kotlinx.mcp.TextContent.TextContent"]},{"name":"constructor(tool: Tool, handler: suspend (CallToolRequest) -> CallToolResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredTool.RegisteredTool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-tool/-registered-tool.html","searchKeys":["RegisteredTool","constructor(tool: Tool, handler: suspend (CallToolRequest) -> CallToolResult)","org.jetbrains.kotlinx.mcp.server.RegisteredTool.RegisteredTool"]},{"name":"constructor(tools: List<Tool>, nextCursor: Cursor?, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ListToolsResult.ListToolsResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-result/-list-tools-result.html","searchKeys":["ListToolsResult","constructor(tools: List<Tool>, nextCursor: Cursor?, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ListToolsResult.ListToolsResult"]},{"name":"constructor(type: String)","description":"org.jetbrains.kotlinx.mcp.UnknownContent.UnknownContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-content/-unknown-content.html","searchKeys":["UnknownContent","constructor(type: String)","org.jetbrains.kotlinx.mcp.UnknownContent.UnknownContent"]},{"name":"constructor(type: String)","description":"org.jetbrains.kotlinx.mcp.UnknownReference.UnknownReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-reference/-unknown-reference.html","searchKeys":["UnknownReference","constructor(type: String)","org.jetbrains.kotlinx.mcp.UnknownReference.UnknownReference"]},{"name":"constructor(uri: String)","description":"org.jetbrains.kotlinx.mcp.ResourceReference.ResourceReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/-resource-reference.html","searchKeys":["ResourceReference","constructor(uri: String)","org.jetbrains.kotlinx.mcp.ResourceReference.ResourceReference"]},{"name":"constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ReadResourceRequest.ReadResourceRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-request/-read-resource-request.html","searchKeys":["ReadResourceRequest","constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ReadResourceRequest.ReadResourceRequest"]},{"name":"constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.ResourceUpdatedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-updated-notification/-resource-updated-notification.html","searchKeys":["ResourceUpdatedNotification","constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.ResourceUpdatedNotification"]},{"name":"constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.SubscribeRequest.SubscribeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-subscribe-request/-subscribe-request.html","searchKeys":["SubscribeRequest","constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.SubscribeRequest.SubscribeRequest"]},{"name":"constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.UnsubscribeRequest.UnsubscribeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unsubscribe-request/-unsubscribe-request.html","searchKeys":["UnsubscribeRequest","constructor(uri: String, _meta: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.UnsubscribeRequest.UnsubscribeRequest"]},{"name":"constructor(uri: String, mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.UnknownResourceContents.UnknownResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-resource-contents/-unknown-resource-contents.html","searchKeys":["UnknownResourceContents","constructor(uri: String, mimeType: String?)","org.jetbrains.kotlinx.mcp.UnknownResourceContents.UnknownResourceContents"]},{"name":"constructor(uri: String, name: String, description: String?, mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.Resource.Resource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/-resource.html","searchKeys":["Resource","constructor(uri: String, name: String, description: String?, mimeType: String?)","org.jetbrains.kotlinx.mcp.Resource.Resource"]},{"name":"constructor(uri: String, name: String?)","description":"org.jetbrains.kotlinx.mcp.Root.Root","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-root/-root.html","searchKeys":["Root","constructor(uri: String, name: String?)","org.jetbrains.kotlinx.mcp.Root.Root"]},{"name":"constructor(uriTemplate: String, name: String, description: String?, mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate.ResourceTemplate","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/-resource-template.html","searchKeys":["ResourceTemplate","constructor(uriTemplate: String, name: String, description: String?, mimeType: String?)","org.jetbrains.kotlinx.mcp.ResourceTemplate.ResourceTemplate"]},{"name":"constructor(value: String)","description":"org.jetbrains.kotlinx.mcp.Method.Custom.Custom","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-custom/-custom.html","searchKeys":["Custom","constructor(value: String)","org.jetbrains.kotlinx.mcp.Method.Custom.Custom"]},{"name":"constructor(value: String)","description":"org.jetbrains.kotlinx.mcp.StopReason.Other.Other","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-other/-other.html","searchKeys":["Other","constructor(value: String)","org.jetbrains.kotlinx.mcp.StopReason.Other.Other"]},{"name":"constructor(values: List<String>, total: Int?, hasMore: Boolean?)","description":"org.jetbrains.kotlinx.mcp.CompleteResult.Completion.Completion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-completion/-completion.html","searchKeys":["Completion","constructor(values: List<String>, total: Int?, hasMore: Boolean?)","org.jetbrains.kotlinx.mcp.CompleteResult.Completion.Completion"]},{"name":"critical","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.critical","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/critical/index.html","searchKeys":["critical","critical","org.jetbrains.kotlinx.mcp.LoggingLevel.critical"]},{"name":"data class Argument(val name: String, val value: String)","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.Argument","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/-argument/index.html","searchKeys":["Argument","data class Argument(val name: String, val value: String)","org.jetbrains.kotlinx.mcp.CompleteRequest.Argument"]},{"name":"data class BlobResourceContents(val blob: String, val uri: String, val mimeType: String?) : ResourceContents","description":"org.jetbrains.kotlinx.mcp.BlobResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-blob-resource-contents/index.html","searchKeys":["BlobResourceContents","data class BlobResourceContents(val blob: String, val uri: String, val mimeType: String?) : ResourceContents","org.jetbrains.kotlinx.mcp.BlobResourceContents"]},{"name":"data class CallToolRequest(val name: String, val arguments: JsonObject = EmptyJsonObject, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.CallToolRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/index.html","searchKeys":["CallToolRequest","data class CallToolRequest(val name: String, val arguments: JsonObject = EmptyJsonObject, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.CallToolRequest"]},{"name":"data class CancelledNotification(val requestId: RequestId, val reason: String?, val _meta: JsonObject = EmptyJsonObject) : ClientNotification, ServerNotification, WithMeta","description":"org.jetbrains.kotlinx.mcp.CancelledNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/index.html","searchKeys":["CancelledNotification","data class CancelledNotification(val requestId: RequestId, val reason: String?, val _meta: JsonObject = EmptyJsonObject) : ClientNotification, ServerNotification, WithMeta","org.jetbrains.kotlinx.mcp.CancelledNotification"]},{"name":"data class ClientCapabilities(val experimental: JsonObject? = EmptyJsonObject, val sampling: JsonObject? = EmptyJsonObject, val roots: ClientCapabilities.Roots? = null)","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/index.html","searchKeys":["ClientCapabilities","data class ClientCapabilities(val experimental: JsonObject? = EmptyJsonObject, val sampling: JsonObject? = EmptyJsonObject, val roots: ClientCapabilities.Roots? = null)","org.jetbrains.kotlinx.mcp.ClientCapabilities"]},{"name":"data class CompleteRequest(val ref: Reference, val argument: CompleteRequest.Argument, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.CompleteRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/index.html","searchKeys":["CompleteRequest","data class CompleteRequest(val ref: Reference, val argument: CompleteRequest.Argument, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.CompleteRequest"]},{"name":"data class CompleteResult(val completion: CompleteResult.Completion, val _meta: JsonObject = EmptyJsonObject) : ServerResult","description":"org.jetbrains.kotlinx.mcp.CompleteResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/index.html","searchKeys":["CompleteResult","data class CompleteResult(val completion: CompleteResult.Completion, val _meta: JsonObject = EmptyJsonObject) : ServerResult","org.jetbrains.kotlinx.mcp.CompleteResult"]},{"name":"data class CreateMessageRequest(val messages: List<SamplingMessage>, val systemPrompt: String?, val includeContext: CreateMessageRequest.IncludeContext?, val temperature: Double?, val maxTokens: Int, val stopSequences: List<String>?, val metadata: JsonObject = EmptyJsonObject, val modelPreferences: ModelPreferences?, val _meta: JsonObject = EmptyJsonObject) : ServerRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/index.html","searchKeys":["CreateMessageRequest","data class CreateMessageRequest(val messages: List<SamplingMessage>, val systemPrompt: String?, val includeContext: CreateMessageRequest.IncludeContext?, val temperature: Double?, val maxTokens: Int, val stopSequences: List<String>?, val metadata: JsonObject = EmptyJsonObject, val modelPreferences: ModelPreferences?, val _meta: JsonObject = EmptyJsonObject) : ServerRequest, WithMeta","org.jetbrains.kotlinx.mcp.CreateMessageRequest"]},{"name":"data class CreateMessageResult(val model: String, val stopReason: StopReason? = null, val role: Role, val content: PromptMessageContentTextOrImage, val _meta: JsonObject = EmptyJsonObject) : ClientResult","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/index.html","searchKeys":["CreateMessageResult","data class CreateMessageResult(val model: String, val stopReason: StopReason? = null, val role: Role, val content: PromptMessageContentTextOrImage, val _meta: JsonObject = EmptyJsonObject) : ClientResult","org.jetbrains.kotlinx.mcp.CreateMessageResult"]},{"name":"data class Custom(val value: String) : Method","description":"org.jetbrains.kotlinx.mcp.Method.Custom","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-custom/index.html","searchKeys":["Custom","data class Custom(val value: String) : Method","org.jetbrains.kotlinx.mcp.Method.Custom"]},{"name":"data class EmbeddedResource(val resource: ResourceContents) : PromptMessageContent","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/index.html","searchKeys":["EmbeddedResource","data class EmbeddedResource(val resource: ResourceContents) : PromptMessageContent","org.jetbrains.kotlinx.mcp.EmbeddedResource"]},{"name":"data class EmptyRequestResult(val _meta: JsonObject = EmptyJsonObject) : ServerResult, ClientResult","description":"org.jetbrains.kotlinx.mcp.EmptyRequestResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-empty-request-result/index.html","searchKeys":["EmptyRequestResult","data class EmptyRequestResult(val _meta: JsonObject = EmptyJsonObject) : ServerResult, ClientResult","org.jetbrains.kotlinx.mcp.EmptyRequestResult"]},{"name":"data class GetPromptRequest(val name: String, val arguments: Map<String, String>?, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/index.html","searchKeys":["GetPromptRequest","data class GetPromptRequest(val name: String, val arguments: Map<String, String>?, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.GetPromptRequest"]},{"name":"data class ImageContent(val data: String, val mimeType: String) : PromptMessageContentTextOrImage","description":"org.jetbrains.kotlinx.mcp.ImageContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/index.html","searchKeys":["ImageContent","data class ImageContent(val data: String, val mimeType: String) : PromptMessageContentTextOrImage","org.jetbrains.kotlinx.mcp.ImageContent"]},{"name":"data class Implementation(val name: String, val version: String)","description":"org.jetbrains.kotlinx.mcp.Implementation","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-implementation/index.html","searchKeys":["Implementation","data class Implementation(val name: String, val version: String)","org.jetbrains.kotlinx.mcp.Implementation"]},{"name":"data class InitializeRequest(val protocolVersion: String, val capabilities: ClientCapabilities, val clientInfo: Implementation, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.InitializeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/index.html","searchKeys":["InitializeRequest","data class InitializeRequest(val protocolVersion: String, val capabilities: ClientCapabilities, val clientInfo: Implementation, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.InitializeRequest"]},{"name":"data class InitializeResult(val protocolVersion: String = LATEST_PROTOCOL_VERSION, val capabilities: ServerCapabilities = ServerCapabilities(), val serverInfo: Implementation, val _meta: JsonObject = EmptyJsonObject) : ServerResult","description":"org.jetbrains.kotlinx.mcp.InitializeResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/index.html","searchKeys":["InitializeResult","data class InitializeResult(val protocolVersion: String = LATEST_PROTOCOL_VERSION, val capabilities: ServerCapabilities = ServerCapabilities(), val serverInfo: Implementation, val _meta: JsonObject = EmptyJsonObject) : ServerResult","org.jetbrains.kotlinx.mcp.InitializeResult"]},{"name":"data class Input(val properties: JsonObject = EmptyJsonObject)","description":"org.jetbrains.kotlinx.mcp.Tool.Input","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/-input/index.html","searchKeys":["Input","data class Input(val properties: JsonObject = EmptyJsonObject)","org.jetbrains.kotlinx.mcp.Tool.Input"]},{"name":"data class JSONRPCError(val code: ErrorCode, val message: String, val data: JsonObject = EmptyJsonObject) : JSONRPCMessage","description":"org.jetbrains.kotlinx.mcp.JSONRPCError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-error/index.html","searchKeys":["JSONRPCError","data class JSONRPCError(val code: ErrorCode, val message: String, val data: JsonObject = EmptyJsonObject) : JSONRPCMessage","org.jetbrains.kotlinx.mcp.JSONRPCError"]},{"name":"data class JSONRPCNotification(val method: String, val params: JsonElement = EmptyJsonObject, val jsonrpc: String = JSONRPC_VERSION) : JSONRPCMessage","description":"org.jetbrains.kotlinx.mcp.JSONRPCNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-notification/index.html","searchKeys":["JSONRPCNotification","data class JSONRPCNotification(val method: String, val params: JsonElement = EmptyJsonObject, val jsonrpc: String = JSONRPC_VERSION) : JSONRPCMessage","org.jetbrains.kotlinx.mcp.JSONRPCNotification"]},{"name":"data class JSONRPCRequest(val id: RequestId = REQUEST_MESSAGE_ID.incrementAndGet(), val method: String, val params: JsonElement? = null, val jsonrpc: String = JSONRPC_VERSION) : JSONRPCMessage","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/index.html","searchKeys":["JSONRPCRequest","data class JSONRPCRequest(val id: RequestId = REQUEST_MESSAGE_ID.incrementAndGet(), val method: String, val params: JsonElement? = null, val jsonrpc: String = JSONRPC_VERSION) : JSONRPCMessage","org.jetbrains.kotlinx.mcp.JSONRPCRequest"]},{"name":"data class ListPromptsRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","description":"org.jetbrains.kotlinx.mcp.ListPromptsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-request/index.html","searchKeys":["ListPromptsRequest","data class ListPromptsRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","org.jetbrains.kotlinx.mcp.ListPromptsRequest"]},{"name":"data class ListResourceTemplatesRequest(val cursor: Cursor?, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-request/index.html","searchKeys":["ListResourceTemplatesRequest","data class ListResourceTemplatesRequest(val cursor: Cursor?, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest"]},{"name":"data class ListResourcesRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","description":"org.jetbrains.kotlinx.mcp.ListResourcesRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-request/index.html","searchKeys":["ListResourcesRequest","data class ListResourcesRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","org.jetbrains.kotlinx.mcp.ListResourcesRequest"]},{"name":"data class ListToolsRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","description":"org.jetbrains.kotlinx.mcp.ListToolsRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-request/index.html","searchKeys":["ListToolsRequest","data class ListToolsRequest(val cursor: Cursor? = null, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, PaginatedRequest","org.jetbrains.kotlinx.mcp.ListToolsRequest"]},{"name":"data class LoggingMessageNotification(val level: LoggingLevel, val logger: String? = null, val data: JsonObject = EmptyJsonObject, val _meta: JsonObject = EmptyJsonObject) : ServerNotification, WithMeta","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/index.html","searchKeys":["LoggingMessageNotification","data class LoggingMessageNotification(val level: LoggingLevel, val logger: String? = null, val data: JsonObject = EmptyJsonObject, val _meta: JsonObject = EmptyJsonObject) : ServerNotification, WithMeta","org.jetbrains.kotlinx.mcp.LoggingMessageNotification"]},{"name":"data class ModelHint(val name: String?)","description":"org.jetbrains.kotlinx.mcp.ModelHint","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-hint/index.html","searchKeys":["ModelHint","data class ModelHint(val name: String?)","org.jetbrains.kotlinx.mcp.ModelHint"]},{"name":"data class ProgressNotification(val progress: Int, val progressToken: ProgressToken, val _meta: JsonObject = EmptyJsonObject, val total: Double?) : ClientNotification, ServerNotification, ProgressBase","description":"org.jetbrains.kotlinx.mcp.ProgressNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/index.html","searchKeys":["ProgressNotification","data class ProgressNotification(val progress: Int, val progressToken: ProgressToken, val _meta: JsonObject = EmptyJsonObject, val total: Double?) : ClientNotification, ServerNotification, ProgressBase","org.jetbrains.kotlinx.mcp.ProgressNotification"]},{"name":"data class PromptArgument(val name: String, val description: String?, val required: Boolean?)","description":"org.jetbrains.kotlinx.mcp.PromptArgument","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-argument/index.html","searchKeys":["PromptArgument","data class PromptArgument(val name: String, val description: String?, val required: Boolean?)","org.jetbrains.kotlinx.mcp.PromptArgument"]},{"name":"data class PromptMessage(val role: Role, val content: PromptMessageContent)","description":"org.jetbrains.kotlinx.mcp.PromptMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message/index.html","searchKeys":["PromptMessage","data class PromptMessage(val role: Role, val content: PromptMessageContent)","org.jetbrains.kotlinx.mcp.PromptMessage"]},{"name":"data class PromptReference(val name: String) : Reference","description":"org.jetbrains.kotlinx.mcp.PromptReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/index.html","searchKeys":["PromptReference","data class PromptReference(val name: String) : Reference","org.jetbrains.kotlinx.mcp.PromptReference"]},{"name":"data class Prompts(val listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-prompts/index.html","searchKeys":["Prompts","data class Prompts(val listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts"]},{"name":"data class ReadResourceRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.ReadResourceRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-request/index.html","searchKeys":["ReadResourceRequest","data class ReadResourceRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.ReadResourceRequest"]},{"name":"data class RegisteredPrompt(val prompt: Prompt, val messageProvider: suspend (GetPromptRequest) -> GetPromptResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-prompt/index.html","searchKeys":["RegisteredPrompt","data class RegisteredPrompt(val prompt: Prompt, val messageProvider: suspend (GetPromptRequest) -> GetPromptResult)","org.jetbrains.kotlinx.mcp.server.RegisteredPrompt"]},{"name":"data class RegisteredResource(val resource: Resource, val readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-resource/index.html","searchKeys":["RegisteredResource","data class RegisteredResource(val resource: Resource, val readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","org.jetbrains.kotlinx.mcp.server.RegisteredResource"]},{"name":"data class RegisteredTool(val tool: Tool, val handler: suspend (CallToolRequest) -> CallToolResult)","description":"org.jetbrains.kotlinx.mcp.server.RegisteredTool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-tool/index.html","searchKeys":["RegisteredTool","data class RegisteredTool(val tool: Tool, val handler: suspend (CallToolRequest) -> CallToolResult)","org.jetbrains.kotlinx.mcp.server.RegisteredTool"]},{"name":"data class RequestOptions(val onProgress: ProgressCallback? = null, val timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","description":"org.jetbrains.kotlinx.mcp.shared.RequestOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-options/index.html","searchKeys":["RequestOptions","data class RequestOptions(val onProgress: ProgressCallback? = null, val timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","org.jetbrains.kotlinx.mcp.shared.RequestOptions"]},{"name":"data class Resource(val uri: String, val name: String, val description: String?, val mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.Resource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/index.html","searchKeys":["Resource","data class Resource(val uri: String, val name: String, val description: String?, val mimeType: String?)","org.jetbrains.kotlinx.mcp.Resource"]},{"name":"data class ResourceReference(val uri: String) : Reference","description":"org.jetbrains.kotlinx.mcp.ResourceReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/index.html","searchKeys":["ResourceReference","data class ResourceReference(val uri: String) : Reference","org.jetbrains.kotlinx.mcp.ResourceReference"]},{"name":"data class ResourceTemplate(val uriTemplate: String, val name: String, val description: String?, val mimeType: String?)","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/index.html","searchKeys":["ResourceTemplate","data class ResourceTemplate(val uriTemplate: String, val name: String, val description: String?, val mimeType: String?)","org.jetbrains.kotlinx.mcp.ResourceTemplate"]},{"name":"data class ResourceUpdatedNotification(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ServerNotification, WithMeta","description":"org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-updated-notification/index.html","searchKeys":["ResourceUpdatedNotification","data class ResourceUpdatedNotification(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ServerNotification, WithMeta","org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification"]},{"name":"data class Resources(val subscribe: Boolean?, val listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-resources/index.html","searchKeys":["Resources","data class Resources(val subscribe: Boolean?, val listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources"]},{"name":"data class Root(val uri: String, val name: String?)","description":"org.jetbrains.kotlinx.mcp.Root","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-root/index.html","searchKeys":["Root","data class Root(val uri: String, val name: String?)","org.jetbrains.kotlinx.mcp.Root"]},{"name":"data class Roots(val listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/-roots/index.html","searchKeys":["Roots","data class Roots(val listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots"]},{"name":"data class SamplingMessage(val role: Role, val content: PromptMessageContentTextOrImage)","description":"org.jetbrains.kotlinx.mcp.SamplingMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-sampling-message/index.html","searchKeys":["SamplingMessage","data class SamplingMessage(val role: Role, val content: PromptMessageContentTextOrImage)","org.jetbrains.kotlinx.mcp.SamplingMessage"]},{"name":"data class ServerCapabilities(val experimental: JsonObject? = EmptyJsonObject, val sampling: JsonObject? = EmptyJsonObject, val logging: JsonObject? = EmptyJsonObject, val prompts: ServerCapabilities.Prompts? = null, val resources: ServerCapabilities.Resources? = null, val tools: ServerCapabilities.Tools? = null)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/index.html","searchKeys":["ServerCapabilities","data class ServerCapabilities(val experimental: JsonObject? = EmptyJsonObject, val sampling: JsonObject? = EmptyJsonObject, val logging: JsonObject? = EmptyJsonObject, val prompts: ServerCapabilities.Prompts? = null, val resources: ServerCapabilities.Resources? = null, val tools: ServerCapabilities.Tools? = null)","org.jetbrains.kotlinx.mcp.ServerCapabilities"]},{"name":"data class SetLevelRequest(val level: LoggingLevel, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-set-level-request/index.html","searchKeys":["SetLevelRequest","data class SetLevelRequest(val level: LoggingLevel, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest"]},{"name":"data class SubscribeRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.SubscribeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-subscribe-request/index.html","searchKeys":["SubscribeRequest","data class SubscribeRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.SubscribeRequest"]},{"name":"data class TextContent(val text: String? = null) : PromptMessageContentTextOrImage","description":"org.jetbrains.kotlinx.mcp.TextContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/index.html","searchKeys":["TextContent","data class TextContent(val text: String? = null) : PromptMessageContentTextOrImage","org.jetbrains.kotlinx.mcp.TextContent"]},{"name":"data class TextResourceContents(val text: String, val uri: String, val mimeType: String?) : ResourceContents","description":"org.jetbrains.kotlinx.mcp.TextResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-resource-contents/index.html","searchKeys":["TextResourceContents","data class TextResourceContents(val text: String, val uri: String, val mimeType: String?) : ResourceContents","org.jetbrains.kotlinx.mcp.TextResourceContents"]},{"name":"data class Tool(val name: String, val description: String?, val inputSchema: Tool.Input)","description":"org.jetbrains.kotlinx.mcp.Tool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/index.html","searchKeys":["Tool","data class Tool(val name: String, val description: String?, val inputSchema: Tool.Input)","org.jetbrains.kotlinx.mcp.Tool"]},{"name":"data class Tools(val listChanged: Boolean?)","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-tools/index.html","searchKeys":["Tools","data class Tools(val listChanged: Boolean?)","org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools"]},{"name":"data class Unknown(val code: Int) : ErrorCode","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Unknown","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-unknown/index.html","searchKeys":["Unknown","data class Unknown(val code: Int) : ErrorCode","org.jetbrains.kotlinx.mcp.ErrorCode.Unknown"]},{"name":"data class UnknownContent(val type: String) : PromptMessageContentTextOrImage","description":"org.jetbrains.kotlinx.mcp.UnknownContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-content/index.html","searchKeys":["UnknownContent","data class UnknownContent(val type: String) : PromptMessageContentTextOrImage","org.jetbrains.kotlinx.mcp.UnknownContent"]},{"name":"data class UnknownMethodRequestOrNotification(val method: Method) : ClientNotification, ClientRequest, ServerNotification, ServerRequest","description":"org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-method-request-or-notification/index.html","searchKeys":["UnknownMethodRequestOrNotification","data class UnknownMethodRequestOrNotification(val method: Method) : ClientNotification, ClientRequest, ServerNotification, ServerRequest","org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification"]},{"name":"data class UnknownReference(val type: String) : Reference","description":"org.jetbrains.kotlinx.mcp.UnknownReference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-reference/index.html","searchKeys":["UnknownReference","data class UnknownReference(val type: String) : Reference","org.jetbrains.kotlinx.mcp.UnknownReference"]},{"name":"data class UnknownResourceContents(val uri: String, val mimeType: String?) : ResourceContents","description":"org.jetbrains.kotlinx.mcp.UnknownResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-resource-contents/index.html","searchKeys":["UnknownResourceContents","data class UnknownResourceContents(val uri: String, val mimeType: String?) : ResourceContents","org.jetbrains.kotlinx.mcp.UnknownResourceContents"]},{"name":"data class UnsubscribeRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","description":"org.jetbrains.kotlinx.mcp.UnsubscribeRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unsubscribe-request/index.html","searchKeys":["UnsubscribeRequest","data class UnsubscribeRequest(val uri: String, val _meta: JsonObject = EmptyJsonObject) : ClientRequest, WithMeta","org.jetbrains.kotlinx.mcp.UnsubscribeRequest"]},{"name":"data object EndTurn : StopReason","description":"org.jetbrains.kotlinx.mcp.StopReason.EndTurn","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-end-turn/index.html","searchKeys":["EndTurn","data object EndTurn : StopReason","org.jetbrains.kotlinx.mcp.StopReason.EndTurn"]},{"name":"data object MaxTokens : StopReason","description":"org.jetbrains.kotlinx.mcp.StopReason.MaxTokens","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-max-tokens/index.html","searchKeys":["MaxTokens","data object MaxTokens : StopReason","org.jetbrains.kotlinx.mcp.StopReason.MaxTokens"]},{"name":"data object StopSequence : StopReason","description":"org.jetbrains.kotlinx.mcp.StopReason.StopSequence","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-stop-sequence/index.html","searchKeys":["StopSequence","data object StopSequence : StopReason","org.jetbrains.kotlinx.mcp.StopReason.StopSequence"]},{"name":"debug","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.debug","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/debug/index.html","searchKeys":["debug","debug","org.jetbrains.kotlinx.mcp.LoggingLevel.debug"]},{"name":"emergency","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.emergency","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/emergency/index.html","searchKeys":["emergency","emergency","org.jetbrains.kotlinx.mcp.LoggingLevel.emergency"]},{"name":"enum Defined : Enum<ErrorCode.Defined> , ErrorCode","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/index.html","searchKeys":["Defined","enum Defined : Enum<ErrorCode.Defined> , ErrorCode","org.jetbrains.kotlinx.mcp.ErrorCode.Defined"]},{"name":"enum Defined : Enum<Method.Defined> , Method","description":"org.jetbrains.kotlinx.mcp.Method.Defined","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/index.html","searchKeys":["Defined","enum Defined : Enum<Method.Defined> , Method","org.jetbrains.kotlinx.mcp.Method.Defined"]},{"name":"enum IncludeContext : Enum<CreateMessageRequest.IncludeContext> ","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/index.html","searchKeys":["IncludeContext","enum IncludeContext : Enum<CreateMessageRequest.IncludeContext> ","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext"]},{"name":"enum LoggingLevel : Enum<LoggingLevel> ","description":"org.jetbrains.kotlinx.mcp.LoggingLevel","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/index.html","searchKeys":["LoggingLevel","enum LoggingLevel : Enum<LoggingLevel> ","org.jetbrains.kotlinx.mcp.LoggingLevel"]},{"name":"enum Role : Enum<Role> ","description":"org.jetbrains.kotlinx.mcp.Role","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/index.html","searchKeys":["Role","enum Role : Enum<Role> ","org.jetbrains.kotlinx.mcp.Role"]},{"name":"error","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.error","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/error/index.html","searchKeys":["error","error","org.jetbrains.kotlinx.mcp.LoggingLevel.error"]},{"name":"fun <T : Notification> setNotificationHandler(method: Method, handler: (notification: T) -> Deferred<Unit>)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.setNotificationHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/set-notification-handler.html","searchKeys":["setNotificationHandler","fun <T : Notification> setNotificationHandler(method: Method, handler: (notification: T) -> Deferred<Unit>)","org.jetbrains.kotlinx.mcp.shared.Protocol.setNotificationHandler"]},{"name":"fun Application.MCP(block: () -> Server)","description":"org.jetbrains.kotlinx.mcp.server.MCP","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-m-c-p.html","searchKeys":["MCP","fun Application.MCP(block: () -> Server)","org.jetbrains.kotlinx.mcp.server.MCP"]},{"name":"fun HttpClient.mcpSseTransport(urlString: String? = null, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): SSEClientTransport","description":"org.jetbrains.kotlinx.mcp.client.mcpSseTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/mcp-sse-transport.html","searchKeys":["mcpSseTransport","fun HttpClient.mcpSseTransport(urlString: String? = null, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): SSEClientTransport","org.jetbrains.kotlinx.mcp.client.mcpSseTransport"]},{"name":"fun HttpClient.mcpWebSocketTransport(urlString: String? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): WebSocketClientTransport","description":"org.jetbrains.kotlinx.mcp.client.mcpWebSocketTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/mcp-web-socket-transport.html","searchKeys":["mcpWebSocketTransport","fun HttpClient.mcpWebSocketTransport(urlString: String? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): WebSocketClientTransport","org.jetbrains.kotlinx.mcp.client.mcpWebSocketTransport"]},{"name":"fun JSONRPCNotification.fromJSON(): Notification","description":"org.jetbrains.kotlinx.mcp.fromJSON","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/from-j-s-o-n.html","searchKeys":["fromJSON","fun JSONRPCNotification.fromJSON(): Notification","org.jetbrains.kotlinx.mcp.fromJSON"]},{"name":"fun JSONRPCRequest.fromJSON(): Request?","description":"org.jetbrains.kotlinx.mcp.fromJSON","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/from-j-s-o-n.html","searchKeys":["fromJSON","fun JSONRPCRequest.fromJSON(): Request?","org.jetbrains.kotlinx.mcp.fromJSON"]},{"name":"fun Notification.toJSON(): JSONRPCNotification","description":"org.jetbrains.kotlinx.mcp.toJSON","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/to-j-s-o-n.html","searchKeys":["toJSON","fun Notification.toJSON(): JSONRPCNotification","org.jetbrains.kotlinx.mcp.toJSON"]},{"name":"fun Request.toJSON(): JSONRPCRequest","description":"org.jetbrains.kotlinx.mcp.toJSON","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/to-j-s-o-n.html","searchKeys":["toJSON","fun Request.toJSON(): JSONRPCRequest","org.jetbrains.kotlinx.mcp.toJSON"]},{"name":"fun Route.mcpWebSocket(options: ServerOptions? = null, handler: suspend Server.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.server.mcpWebSocket","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/mcp-web-socket.html","searchKeys":["mcpWebSocket","fun Route.mcpWebSocket(options: ServerOptions? = null, handler: suspend Server.() -> Unit = {})","org.jetbrains.kotlinx.mcp.server.mcpWebSocket"]},{"name":"fun Route.mcpWebSocket(path: String, options: ServerOptions? = null, handler: suspend Server.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.server.mcpWebSocket","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/mcp-web-socket.html","searchKeys":["mcpWebSocket","fun Route.mcpWebSocket(path: String, options: ServerOptions? = null, handler: suspend Server.() -> Unit = {})","org.jetbrains.kotlinx.mcp.server.mcpWebSocket"]},{"name":"fun Route.mcpWebSocketTransport(handler: suspend WebSocketMcpServerTransport.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.server.mcpWebSocketTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/mcp-web-socket-transport.html","searchKeys":["mcpWebSocketTransport","fun Route.mcpWebSocketTransport(handler: suspend WebSocketMcpServerTransport.() -> Unit = {})","org.jetbrains.kotlinx.mcp.server.mcpWebSocketTransport"]},{"name":"fun Route.mcpWebSocketTransport(path: String, handler: suspend WebSocketMcpServerTransport.() -> Unit = {})","description":"org.jetbrains.kotlinx.mcp.server.mcpWebSocketTransport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/mcp-web-socket-transport.html","searchKeys":["mcpWebSocketTransport","fun Route.mcpWebSocketTransport(path: String, handler: suspend WebSocketMcpServerTransport.() -> Unit = {})","org.jetbrains.kotlinx.mcp.server.mcpWebSocketTransport"]},{"name":"fun addPrompt(name: String, description: String? = null, arguments: List<PromptArgument>? = null, promptProvider: suspend (GetPromptRequest) -> GetPromptResult)","description":"org.jetbrains.kotlinx.mcp.server.Server.addPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-prompt.html","searchKeys":["addPrompt","fun addPrompt(name: String, description: String? = null, arguments: List<PromptArgument>? = null, promptProvider: suspend (GetPromptRequest) -> GetPromptResult)","org.jetbrains.kotlinx.mcp.server.Server.addPrompt"]},{"name":"fun addPrompt(prompt: Prompt, promptProvider: suspend (GetPromptRequest) -> GetPromptResult)","description":"org.jetbrains.kotlinx.mcp.server.Server.addPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-prompt.html","searchKeys":["addPrompt","fun addPrompt(prompt: Prompt, promptProvider: suspend (GetPromptRequest) -> GetPromptResult)","org.jetbrains.kotlinx.mcp.server.Server.addPrompt"]},{"name":"fun addPrompts(promptsToAdd: List<RegisteredPrompt>)","description":"org.jetbrains.kotlinx.mcp.server.Server.addPrompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-prompts.html","searchKeys":["addPrompts","fun addPrompts(promptsToAdd: List<RegisteredPrompt>)","org.jetbrains.kotlinx.mcp.server.Server.addPrompts"]},{"name":"fun addResource(uri: String, name: String, description: String, mimeType: String = \"text/html\", readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","description":"org.jetbrains.kotlinx.mcp.server.Server.addResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-resource.html","searchKeys":["addResource","fun addResource(uri: String, name: String, description: String, mimeType: String = \"text/html\", readHandler: suspend (ReadResourceRequest) -> ReadResourceResult)","org.jetbrains.kotlinx.mcp.server.Server.addResource"]},{"name":"fun addResources(resourcesToAdd: List<RegisteredResource>)","description":"org.jetbrains.kotlinx.mcp.server.Server.addResources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-resources.html","searchKeys":["addResources","fun addResources(resourcesToAdd: List<RegisteredResource>)","org.jetbrains.kotlinx.mcp.server.Server.addResources"]},{"name":"fun addTool(name: String, description: String, inputSchema: Tool.Input = Tool.Input(), handler: suspend (CallToolRequest) -> CallToolResult)","description":"org.jetbrains.kotlinx.mcp.server.Server.addTool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-tool.html","searchKeys":["addTool","fun addTool(name: String, description: String, inputSchema: Tool.Input = Tool.Input(), handler: suspend (CallToolRequest) -> CallToolResult)","org.jetbrains.kotlinx.mcp.server.Server.addTool"]},{"name":"fun addTools(toolsToAdd: List<RegisteredTool>)","description":"org.jetbrains.kotlinx.mcp.server.Server.addTools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/add-tools.html","searchKeys":["addTools","fun addTools(toolsToAdd: List<RegisteredTool>)","org.jetbrains.kotlinx.mcp.server.Server.addTools"]},{"name":"fun append(chunk: ByteArray)","description":"org.jetbrains.kotlinx.mcp.shared.ReadBuffer.append","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-read-buffer/append.html","searchKeys":["append","fun append(chunk: ByteArray)","org.jetbrains.kotlinx.mcp.shared.ReadBuffer.append"]},{"name":"fun clear()","description":"org.jetbrains.kotlinx.mcp.shared.ReadBuffer.clear","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-read-buffer/clear.html","searchKeys":["clear","fun clear()","org.jetbrains.kotlinx.mcp.shared.ReadBuffer.clear"]},{"name":"fun getServerCapabilities(): ServerCapabilities?","description":"org.jetbrains.kotlinx.mcp.client.Client.getServerCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/get-server-capabilities.html","searchKeys":["getServerCapabilities","fun getServerCapabilities(): ServerCapabilities?","org.jetbrains.kotlinx.mcp.client.Client.getServerCapabilities"]},{"name":"fun getServerVersion(): Implementation?","description":"org.jetbrains.kotlinx.mcp.client.Client.getServerVersion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/get-server-version.html","searchKeys":["getServerVersion","fun getServerVersion(): Implementation?","org.jetbrains.kotlinx.mcp.client.Client.getServerVersion"]},{"name":"fun readMessage(): JSONRPCMessage?","description":"org.jetbrains.kotlinx.mcp.shared.ReadBuffer.readMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-read-buffer/read-message.html","searchKeys":["readMessage","fun readMessage(): JSONRPCMessage?","org.jetbrains.kotlinx.mcp.shared.ReadBuffer.readMessage"]},{"name":"fun removeNotificationHandler(method: Method)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.removeNotificationHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/remove-notification-handler.html","searchKeys":["removeNotificationHandler","fun removeNotificationHandler(method: Method)","org.jetbrains.kotlinx.mcp.shared.Protocol.removeNotificationHandler"]},{"name":"fun removeRequestHandler(method: Method)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.removeRequestHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/remove-request-handler.html","searchKeys":["removeRequestHandler","fun removeRequestHandler(method: Method)","org.jetbrains.kotlinx.mcp.shared.Protocol.removeRequestHandler"]},{"name":"fun valueOf(value: String): CreateMessageRequest.IncludeContext","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.valueOf","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CreateMessageRequest.IncludeContext","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.valueOf"]},{"name":"fun valueOf(value: String): ErrorCode.Defined","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.valueOf","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): ErrorCode.Defined","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.valueOf"]},{"name":"fun valueOf(value: String): LoggingLevel","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.valueOf","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): LoggingLevel","org.jetbrains.kotlinx.mcp.LoggingLevel.valueOf"]},{"name":"fun valueOf(value: String): Method.Defined","description":"org.jetbrains.kotlinx.mcp.Method.Defined.valueOf","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Method.Defined","org.jetbrains.kotlinx.mcp.Method.Defined.valueOf"]},{"name":"fun valueOf(value: String): Role","description":"org.jetbrains.kotlinx.mcp.Role.valueOf","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Role","org.jetbrains.kotlinx.mcp.Role.valueOf"]},{"name":"fun values(): Array<CreateMessageRequest.IncludeContext>","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/values.html","searchKeys":["values","fun values(): Array<CreateMessageRequest.IncludeContext>","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.values"]},{"name":"fun values(): Array<ErrorCode.Defined>","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/values.html","searchKeys":["values","fun values(): Array<ErrorCode.Defined>","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.values"]},{"name":"fun values(): Array<LoggingLevel>","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/values.html","searchKeys":["values","fun values(): Array<LoggingLevel>","org.jetbrains.kotlinx.mcp.LoggingLevel.values"]},{"name":"fun values(): Array<Method.Defined>","description":"org.jetbrains.kotlinx.mcp.Method.Defined.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/values.html","searchKeys":["values","fun values(): Array<Method.Defined>","org.jetbrains.kotlinx.mcp.Method.Defined.values"]},{"name":"fun values(): Array<Role>","description":"org.jetbrains.kotlinx.mcp.Role.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/values.html","searchKeys":["values","fun values(): Array<Role>","org.jetbrains.kotlinx.mcp.Role.values"]},{"name":"info","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.info","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/info/index.html","searchKeys":["info","info","org.jetbrains.kotlinx.mcp.LoggingLevel.info"]},{"name":"inline fun <T : Request> setRequestHandler(method: Method, noinline block: suspend (T, RequestHandlerExtra) -> SendResultT?)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.setRequestHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/set-request-handler.html","searchKeys":["setRequestHandler","inline fun <T : Request> setRequestHandler(method: Method, noinline block: suspend (T, RequestHandlerExtra) -> SendResultT?)","org.jetbrains.kotlinx.mcp.shared.Protocol.setRequestHandler"]},{"name":"interface ClientRequest : Request","description":"org.jetbrains.kotlinx.mcp.ClientRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-request/index.html","searchKeys":["ClientRequest","interface ClientRequest : Request","org.jetbrains.kotlinx.mcp.ClientRequest"]},{"name":"interface Transport","description":"org.jetbrains.kotlinx.mcp.shared.Transport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-transport/index.html","searchKeys":["Transport","interface Transport","org.jetbrains.kotlinx.mcp.shared.Transport"]},{"name":"none","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.none","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/none/index.html","searchKeys":["none","none","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.none"]},{"name":"notice","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.notice","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/notice/index.html","searchKeys":["notice","notice","org.jetbrains.kotlinx.mcp.LoggingLevel.notice"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.EmbeddedResource.Companion"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.ImageContent.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.ImageContent.Companion"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.PromptReference.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.PromptReference.Companion"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.ResourceReference.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.ResourceReference.Companion"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.TextContent.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.TextContent.Companion"]},{"name":"object Companion","description":"org.jetbrains.kotlinx.mcp.WithMeta.Companion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-with-meta/-companion/index.html","searchKeys":["Companion","object Companion","org.jetbrains.kotlinx.mcp.WithMeta.Companion"]},{"name":"open class Client(clientInfo: Implementation, options: ClientOptions = ClientOptions()) : Protocol<ClientRequest, ClientNotification, ClientResult> ","description":"org.jetbrains.kotlinx.mcp.client.Client","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/index.html","searchKeys":["Client","open class Client(clientInfo: Implementation, options: ClientOptions = ClientOptions()) : Protocol<ClientRequest, ClientNotification, ClientResult> ","org.jetbrains.kotlinx.mcp.client.Client"]},{"name":"open class CustomRequest(val method: Method) : Request","description":"org.jetbrains.kotlinx.mcp.CustomRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-request/index.html","searchKeys":["CustomRequest","open class CustomRequest(val method: Method) : Request","org.jetbrains.kotlinx.mcp.CustomRequest"]},{"name":"open class Progress(val progress: Int, val total: Double?) : ProgressBase","description":"org.jetbrains.kotlinx.mcp.Progress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress/index.html","searchKeys":["Progress","open class Progress(val progress: Int, val total: Double?) : ProgressBase","org.jetbrains.kotlinx.mcp.Progress"]},{"name":"open class ProtocolOptions(var enforceStrictCapabilities: Boolean = false, var timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","description":"org.jetbrains.kotlinx.mcp.shared.ProtocolOptions","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol-options/index.html","searchKeys":["ProtocolOptions","open class ProtocolOptions(var enforceStrictCapabilities: Boolean = false, var timeout: Duration = DEFAULT_REQUEST_TIMEOUT)","org.jetbrains.kotlinx.mcp.shared.ProtocolOptions"]},{"name":"open class Server(serverInfo: Implementation, options: ServerOptions, var onCloseCallback: () -> Unit? = null) : Protocol<ServerRequest, ServerNotification, ServerResult> ","description":"org.jetbrains.kotlinx.mcp.server.Server","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/index.html","searchKeys":["Server","open class Server(serverInfo: Implementation, options: ServerOptions, var onCloseCallback: () -> Unit? = null) : Protocol<ServerRequest, ServerNotification, ServerResult> ","org.jetbrains.kotlinx.mcp.server.Server"]},{"name":"open fun onclose()","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.onclose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/onclose.html","searchKeys":["onclose","open fun onclose()","org.jetbrains.kotlinx.mcp.shared.Protocol.onclose"]},{"name":"open fun onerror(error: Throwable)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.onerror","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/onerror.html","searchKeys":["onerror","open fun onerror(error: Throwable)","org.jetbrains.kotlinx.mcp.shared.Protocol.onerror"]},{"name":"open override fun assertCapabilityForMethod(method: Method)","description":"org.jetbrains.kotlinx.mcp.client.Client.assertCapabilityForMethod","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/assert-capability-for-method.html","searchKeys":["assertCapabilityForMethod","open override fun assertCapabilityForMethod(method: Method)","org.jetbrains.kotlinx.mcp.client.Client.assertCapabilityForMethod"]},{"name":"open override fun assertCapabilityForMethod(method: Method)","description":"org.jetbrains.kotlinx.mcp.server.Server.assertCapabilityForMethod","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/assert-capability-for-method.html","searchKeys":["assertCapabilityForMethod","open override fun assertCapabilityForMethod(method: Method)","org.jetbrains.kotlinx.mcp.server.Server.assertCapabilityForMethod"]},{"name":"open override fun assertRequestHandlerCapability(method: Method)","description":"org.jetbrains.kotlinx.mcp.client.Client.assertRequestHandlerCapability","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/assert-request-handler-capability.html","searchKeys":["assertRequestHandlerCapability","open override fun assertRequestHandlerCapability(method: Method)","org.jetbrains.kotlinx.mcp.client.Client.assertRequestHandlerCapability"]},{"name":"open override fun assertRequestHandlerCapability(method: Method)","description":"org.jetbrains.kotlinx.mcp.server.Server.assertRequestHandlerCapability","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/assert-request-handler-capability.html","searchKeys":["assertRequestHandlerCapability","open override fun assertRequestHandlerCapability(method: Method)","org.jetbrains.kotlinx.mcp.server.Server.assertRequestHandlerCapability"]},{"name":"open override fun onclose()","description":"org.jetbrains.kotlinx.mcp.server.Server.onclose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/onclose.html","searchKeys":["onclose","open override fun onclose()","org.jetbrains.kotlinx.mcp.server.Server.onclose"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CallToolRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CallToolRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CallToolResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CallToolResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CancelledNotification._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CancelledNotification._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CompleteRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CompleteRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CompleteResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CompleteResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CreateMessageRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CreateMessageResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.CustomMeta._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-meta/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.CustomMeta._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.EmptyRequestResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-empty-request-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.EmptyRequestResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.GetPromptRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.GetPromptResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.GetPromptResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.InitializeRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.InitializeRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.InitializeResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.InitializeResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListPromptsRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListPromptsRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListPromptsResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListPromptsResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListResourcesRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListResourcesRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListResourcesResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListResourcesResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListRootsRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListRootsRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListRootsResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListRootsResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListToolsRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListToolsRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ListToolsResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ListToolsResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-set-level-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.LoggingMessageNotification._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ReadResourceRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ReadResourceRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ReadResourceResult._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-result/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ReadResourceResult._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-updated-notification/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.SubscribeRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-subscribe-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.SubscribeRequest._meta"]},{"name":"open override val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.UnsubscribeRequest._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unsubscribe-request/_meta.html","searchKeys":["_meta","open override val _meta: JsonObject","org.jetbrains.kotlinx.mcp.UnsubscribeRequest._meta"]},{"name":"open override val code: Int","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.code","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/code.html","searchKeys":["code","open override val code: Int","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.code"]},{"name":"open override val code: Int","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Unknown.code","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-unknown/code.html","searchKeys":["code","open override val code: Int","org.jetbrains.kotlinx.mcp.ErrorCode.Unknown.code"]},{"name":"open override val content: List<PromptMessageContent>","description":"org.jetbrains.kotlinx.mcp.CallToolResult.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result/content.html","searchKeys":["content","open override val content: List<PromptMessageContent>","org.jetbrains.kotlinx.mcp.CallToolResult.content"]},{"name":"open override val content: List<PromptMessageContent>","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/content.html","searchKeys":["content","open override val content: List<PromptMessageContent>","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.content"]},{"name":"open override val cursor: Cursor?","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-request/cursor.html","searchKeys":["cursor","open override val cursor: Cursor?","org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.cursor"]},{"name":"open override val cursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListPromptsRequest.cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-request/cursor.html","searchKeys":["cursor","open override val cursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListPromptsRequest.cursor"]},{"name":"open override val cursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListResourcesRequest.cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-request/cursor.html","searchKeys":["cursor","open override val cursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListResourcesRequest.cursor"]},{"name":"open override val cursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListToolsRequest.cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-request/cursor.html","searchKeys":["cursor","open override val cursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListToolsRequest.cursor"]},{"name":"open override val isError: Boolean? = false","description":"org.jetbrains.kotlinx.mcp.CallToolResult.isError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result/is-error.html","searchKeys":["isError","open override val isError: Boolean? = false","org.jetbrains.kotlinx.mcp.CallToolResult.isError"]},{"name":"open override val isError: Boolean? = false","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.isError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/is-error.html","searchKeys":["isError","open override val isError: Boolean? = false","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.isError"]},{"name":"open override val message: String","description":"org.jetbrains.kotlinx.mcp.McpError.message","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-mcp-error/message.html","searchKeys":["message","open override val message: String","org.jetbrains.kotlinx.mcp.McpError.message"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.CallToolRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.CallToolRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.CancelledNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.CancelledNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.CompleteRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.CreateMessageRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.CustomRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-custom-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.CustomRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.GetPromptRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.InitializeRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.InitializeRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.InitializedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialized-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.InitializedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ListPromptsRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ListPromptsRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ListResourceTemplatesRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ListResourcesRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ListResourcesRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ListRootsRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ListRootsRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ListToolsRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ListToolsRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-set-level-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.PingRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-ping-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.PingRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ProgressNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ProgressNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.PromptListChangedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-list-changed-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.PromptListChangedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ReadResourceRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ReadResourceRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ResourceListChangedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-list-changed-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ResourceListChangedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-updated-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.RootsListChangedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-roots-list-changed-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.RootsListChangedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.SubscribeRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-subscribe-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.SubscribeRequest.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.ToolListChangedNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool-list-changed-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.ToolListChangedNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-method-request-or-notification/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.UnknownMethodRequestOrNotification.method"]},{"name":"open override val method: Method","description":"org.jetbrains.kotlinx.mcp.UnsubscribeRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unsubscribe-request/method.html","searchKeys":["method","open override val method: Method","org.jetbrains.kotlinx.mcp.UnsubscribeRequest.method"]},{"name":"open override val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.BlobResourceContents.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-blob-resource-contents/mime-type.html","searchKeys":["mimeType","open override val mimeType: String?","org.jetbrains.kotlinx.mcp.BlobResourceContents.mimeType"]},{"name":"open override val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.TextResourceContents.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-resource-contents/mime-type.html","searchKeys":["mimeType","open override val mimeType: String?","org.jetbrains.kotlinx.mcp.TextResourceContents.mimeType"]},{"name":"open override val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.UnknownResourceContents.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-resource-contents/mime-type.html","searchKeys":["mimeType","open override val mimeType: String?","org.jetbrains.kotlinx.mcp.UnknownResourceContents.mimeType"]},{"name":"open override val nextCursor: Cursor?","description":"org.jetbrains.kotlinx.mcp.ListToolsResult.nextCursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-result/next-cursor.html","searchKeys":["nextCursor","open override val nextCursor: Cursor?","org.jetbrains.kotlinx.mcp.ListToolsResult.nextCursor"]},{"name":"open override val nextCursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListPromptsResult.nextCursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-result/next-cursor.html","searchKeys":["nextCursor","open override val nextCursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListPromptsResult.nextCursor"]},{"name":"open override val nextCursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.nextCursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-result/next-cursor.html","searchKeys":["nextCursor","open override val nextCursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.nextCursor"]},{"name":"open override val nextCursor: Cursor? = null","description":"org.jetbrains.kotlinx.mcp.ListResourcesResult.nextCursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-result/next-cursor.html","searchKeys":["nextCursor","open override val nextCursor: Cursor? = null","org.jetbrains.kotlinx.mcp.ListResourcesResult.nextCursor"]},{"name":"open override val progress: Int","description":"org.jetbrains.kotlinx.mcp.Progress.progress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress/progress.html","searchKeys":["progress","open override val progress: Int","org.jetbrains.kotlinx.mcp.Progress.progress"]},{"name":"open override val progress: Int","description":"org.jetbrains.kotlinx.mcp.ProgressNotification.progress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/progress.html","searchKeys":["progress","open override val progress: Int","org.jetbrains.kotlinx.mcp.ProgressNotification.progress"]},{"name":"open override val total: Double?","description":"org.jetbrains.kotlinx.mcp.Progress.total","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress/total.html","searchKeys":["total","open override val total: Double?","org.jetbrains.kotlinx.mcp.Progress.total"]},{"name":"open override val total: Double?","description":"org.jetbrains.kotlinx.mcp.ProgressNotification.total","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/total.html","searchKeys":["total","open override val total: Double?","org.jetbrains.kotlinx.mcp.ProgressNotification.total"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.EmbeddedResource.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.ImageContent.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.ImageContent.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.PromptReference.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.PromptReference.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.ResourceReference.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.ResourceReference.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.TextContent.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.TextContent.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.UnknownContent.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-content/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.UnknownContent.type"]},{"name":"open override val type: String","description":"org.jetbrains.kotlinx.mcp.UnknownReference.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-reference/type.html","searchKeys":["type","open override val type: String","org.jetbrains.kotlinx.mcp.UnknownReference.type"]},{"name":"open override val uri: String","description":"org.jetbrains.kotlinx.mcp.BlobResourceContents.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-blob-resource-contents/uri.html","searchKeys":["uri","open override val uri: String","org.jetbrains.kotlinx.mcp.BlobResourceContents.uri"]},{"name":"open override val uri: String","description":"org.jetbrains.kotlinx.mcp.TextResourceContents.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-resource-contents/uri.html","searchKeys":["uri","open override val uri: String","org.jetbrains.kotlinx.mcp.TextResourceContents.uri"]},{"name":"open override val uri: String","description":"org.jetbrains.kotlinx.mcp.UnknownResourceContents.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unknown-resource-contents/uri.html","searchKeys":["uri","open override val uri: String","org.jetbrains.kotlinx.mcp.UnknownResourceContents.uri"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.Method.Custom.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-custom/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.Method.Custom.value"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.Method.Defined.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.Method.Defined.value"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.StopReason.EndTurn.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-end-turn/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.StopReason.EndTurn.value"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.StopReason.MaxTokens.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-max-tokens/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.StopReason.MaxTokens.value"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.StopReason.Other.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-other/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.StopReason.Other.value"]},{"name":"open override val value: String","description":"org.jetbrains.kotlinx.mcp.StopReason.StopSequence.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-stop-sequence/value.html","searchKeys":["value","open override val value: String","org.jetbrains.kotlinx.mcp.StopReason.StopSequence.value"]},{"name":"open override var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/on-close.html","searchKeys":["onClose","open override var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onClose"]},{"name":"open override var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/on-close.html","searchKeys":["onClose","open override var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onClose"]},{"name":"open override var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/on-close.html","searchKeys":["onClose","open override var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onClose"]},{"name":"open override var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/on-close.html","searchKeys":["onClose","open override var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onClose"]},{"name":"open override var onClose: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onClose","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/on-close.html","searchKeys":["onClose","open override var onClose: () -> Unit?","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onClose"]},{"name":"open override var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/on-error.html","searchKeys":["onError","open override var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onError"]},{"name":"open override var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/on-error.html","searchKeys":["onError","open override var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onError"]},{"name":"open override var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/on-error.html","searchKeys":["onError","open override var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onError"]},{"name":"open override var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/on-error.html","searchKeys":["onError","open override var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onError"]},{"name":"open override var onError: (Throwable) -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/on-error.html","searchKeys":["onError","open override var onError: (Throwable) -> Unit?","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onError"]},{"name":"open override var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/on-message.html","searchKeys":["onMessage","open override var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.onMessage"]},{"name":"open override var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/on-message.html","searchKeys":["onMessage","open override var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.onMessage"]},{"name":"open override var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/on-message.html","searchKeys":["onMessage","open override var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.onMessage"]},{"name":"open override var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/on-message.html","searchKeys":["onMessage","open override var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.onMessage"]},{"name":"open override var onMessage: suspend (JSONRPCMessage) -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/on-message.html","searchKeys":["onMessage","open override var onMessage: suspend (JSONRPCMessage) -> Unit?","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.onMessage"]},{"name":"open suspend fun connect(transport: Transport)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.connect","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/connect.html","searchKeys":["connect","open suspend fun connect(transport: Transport)","org.jetbrains.kotlinx.mcp.shared.Protocol.connect"]},{"name":"open suspend override fun close()","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/close.html","searchKeys":["close","open suspend override fun close()","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.close"]},{"name":"open suspend override fun close()","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/close.html","searchKeys":["close","open suspend override fun close()","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.close"]},{"name":"open suspend override fun close()","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/close.html","searchKeys":["close","open suspend override fun close()","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.close"]},{"name":"open suspend override fun close()","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/close.html","searchKeys":["close","open suspend override fun close()","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.close"]},{"name":"open suspend override fun close()","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/close.html","searchKeys":["close","open suspend override fun close()","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.close"]},{"name":"open suspend override fun connect(transport: Transport)","description":"org.jetbrains.kotlinx.mcp.client.Client.connect","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/connect.html","searchKeys":["connect","open suspend override fun connect(transport: Transport)","org.jetbrains.kotlinx.mcp.client.Client.connect"]},{"name":"open suspend override fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/send.html","searchKeys":["send","open suspend override fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.send"]},{"name":"open suspend override fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/send.html","searchKeys":["send","open suspend override fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.send"]},{"name":"open suspend override fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/send.html","searchKeys":["send","open suspend override fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.send"]},{"name":"open suspend override fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/send.html","searchKeys":["send","open suspend override fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.send"]},{"name":"open suspend override fun send(message: JSONRPCMessage)","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.send","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/send.html","searchKeys":["send","open suspend override fun send(message: JSONRPCMessage)","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.send"]},{"name":"open suspend override fun start()","description":"org.jetbrains.kotlinx.mcp.client.SSEClientTransport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-s-s-e-client-transport/start.html","searchKeys":["start","open suspend override fun start()","org.jetbrains.kotlinx.mcp.client.SSEClientTransport.start"]},{"name":"open suspend override fun start()","description":"org.jetbrains.kotlinx.mcp.client.StdioClientTransport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-stdio-client-transport/start.html","searchKeys":["start","open suspend override fun start()","org.jetbrains.kotlinx.mcp.client.StdioClientTransport.start"]},{"name":"open suspend override fun start()","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/start.html","searchKeys":["start","open suspend override fun start()","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.start"]},{"name":"open suspend override fun start()","description":"org.jetbrains.kotlinx.mcp.server.StdioServerTransport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-stdio-server-transport/start.html","searchKeys":["start","open suspend override fun start()","org.jetbrains.kotlinx.mcp.server.StdioServerTransport.start"]},{"name":"open suspend override fun start()","description":"org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.start","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-web-socket-mcp-transport/start.html","searchKeys":["start","open suspend override fun start()","org.jetbrains.kotlinx.mcp.shared.WebSocketMcpTransport.start"]},{"name":"open val isError: Boolean?","description":"org.jetbrains.kotlinx.mcp.CallToolResultBase.isError","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result-base/is-error.html","searchKeys":["isError","open val isError: Boolean?","org.jetbrains.kotlinx.mcp.CallToolResultBase.isError"]},{"name":"protected open override var session: WebSocketSession","description":"org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport.session","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-web-socket-client-transport/session.html","searchKeys":["session","protected open override var session: WebSocketSession","org.jetbrains.kotlinx.mcp.client.WebSocketClientTransport.session"]},{"name":"sealed interface CallToolResultBase : ServerResult","description":"org.jetbrains.kotlinx.mcp.CallToolResultBase","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-result-base/index.html","searchKeys":["CallToolResultBase","sealed interface CallToolResultBase : ServerResult","org.jetbrains.kotlinx.mcp.CallToolResultBase"]},{"name":"sealed interface ClientNotification : Notification","description":"org.jetbrains.kotlinx.mcp.ClientNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-notification/index.html","searchKeys":["ClientNotification","sealed interface ClientNotification : Notification","org.jetbrains.kotlinx.mcp.ClientNotification"]},{"name":"sealed interface ClientResult : RequestResult","description":"org.jetbrains.kotlinx.mcp.ClientResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-result/index.html","searchKeys":["ClientResult","sealed interface ClientResult : RequestResult","org.jetbrains.kotlinx.mcp.ClientResult"]},{"name":"sealed interface ErrorCode","description":"org.jetbrains.kotlinx.mcp.ErrorCode","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/index.html","searchKeys":["ErrorCode","sealed interface ErrorCode","org.jetbrains.kotlinx.mcp.ErrorCode"]},{"name":"sealed interface JSONRPCMessage","description":"org.jetbrains.kotlinx.mcp.JSONRPCMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-message/index.html","searchKeys":["JSONRPCMessage","sealed interface JSONRPCMessage","org.jetbrains.kotlinx.mcp.JSONRPCMessage"]},{"name":"sealed interface Method","description":"org.jetbrains.kotlinx.mcp.Method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/index.html","searchKeys":["Method","sealed interface Method","org.jetbrains.kotlinx.mcp.Method"]},{"name":"sealed interface Notification","description":"org.jetbrains.kotlinx.mcp.Notification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-notification/index.html","searchKeys":["Notification","sealed interface Notification","org.jetbrains.kotlinx.mcp.Notification"]},{"name":"sealed interface PaginatedRequest : Request, WithMeta","description":"org.jetbrains.kotlinx.mcp.PaginatedRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-paginated-request/index.html","searchKeys":["PaginatedRequest","sealed interface PaginatedRequest : Request, WithMeta","org.jetbrains.kotlinx.mcp.PaginatedRequest"]},{"name":"sealed interface PaginatedResult : RequestResult","description":"org.jetbrains.kotlinx.mcp.PaginatedResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-paginated-result/index.html","searchKeys":["PaginatedResult","sealed interface PaginatedResult : RequestResult","org.jetbrains.kotlinx.mcp.PaginatedResult"]},{"name":"sealed interface ProgressBase","description":"org.jetbrains.kotlinx.mcp.ProgressBase","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-base/index.html","searchKeys":["ProgressBase","sealed interface ProgressBase","org.jetbrains.kotlinx.mcp.ProgressBase"]},{"name":"sealed interface PromptMessageContent","description":"org.jetbrains.kotlinx.mcp.PromptMessageContent","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message-content/index.html","searchKeys":["PromptMessageContent","sealed interface PromptMessageContent","org.jetbrains.kotlinx.mcp.PromptMessageContent"]},{"name":"sealed interface PromptMessageContentTextOrImage : PromptMessageContent","description":"org.jetbrains.kotlinx.mcp.PromptMessageContentTextOrImage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message-content-text-or-image/index.html","searchKeys":["PromptMessageContentTextOrImage","sealed interface PromptMessageContentTextOrImage : PromptMessageContent","org.jetbrains.kotlinx.mcp.PromptMessageContentTextOrImage"]},{"name":"sealed interface Reference","description":"org.jetbrains.kotlinx.mcp.Reference","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-reference/index.html","searchKeys":["Reference","sealed interface Reference","org.jetbrains.kotlinx.mcp.Reference"]},{"name":"sealed interface Request","description":"org.jetbrains.kotlinx.mcp.Request","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-request/index.html","searchKeys":["Request","sealed interface Request","org.jetbrains.kotlinx.mcp.Request"]},{"name":"sealed interface RequestResult : WithMeta","description":"org.jetbrains.kotlinx.mcp.RequestResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-request-result/index.html","searchKeys":["RequestResult","sealed interface RequestResult : WithMeta","org.jetbrains.kotlinx.mcp.RequestResult"]},{"name":"sealed interface ResourceContents","description":"org.jetbrains.kotlinx.mcp.ResourceContents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-contents/index.html","searchKeys":["ResourceContents","sealed interface ResourceContents","org.jetbrains.kotlinx.mcp.ResourceContents"]},{"name":"sealed interface ServerNotification : Notification","description":"org.jetbrains.kotlinx.mcp.ServerNotification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-notification/index.html","searchKeys":["ServerNotification","sealed interface ServerNotification : Notification","org.jetbrains.kotlinx.mcp.ServerNotification"]},{"name":"sealed interface ServerRequest : Request","description":"org.jetbrains.kotlinx.mcp.ServerRequest","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-request/index.html","searchKeys":["ServerRequest","sealed interface ServerRequest : Request","org.jetbrains.kotlinx.mcp.ServerRequest"]},{"name":"sealed interface ServerResult : RequestResult","description":"org.jetbrains.kotlinx.mcp.ServerResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-result/index.html","searchKeys":["ServerResult","sealed interface ServerResult : RequestResult","org.jetbrains.kotlinx.mcp.ServerResult"]},{"name":"sealed interface StopReason","description":"org.jetbrains.kotlinx.mcp.StopReason","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/index.html","searchKeys":["StopReason","sealed interface StopReason","org.jetbrains.kotlinx.mcp.StopReason"]},{"name":"sealed interface WithMeta","description":"org.jetbrains.kotlinx.mcp.WithMeta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-with-meta/index.html","searchKeys":["WithMeta","sealed interface WithMeta","org.jetbrains.kotlinx.mcp.WithMeta"]},{"name":"suspend fun <T : RequestResult> request(request: SendRequestT, options: RequestOptions? = null): T","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.request","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/request.html","searchKeys":["request","suspend fun <T : RequestResult> request(request: SendRequestT, options: RequestOptions? = null): T","org.jetbrains.kotlinx.mcp.shared.Protocol.request"]},{"name":"suspend fun HttpClient.mcpSse(urlString: String? = null, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): Client","description":"org.jetbrains.kotlinx.mcp.client.mcpSse","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/mcp-sse.html","searchKeys":["mcpSse","suspend fun HttpClient.mcpSse(urlString: String? = null, reconnectionTime: Duration? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): Client","org.jetbrains.kotlinx.mcp.client.mcpSse"]},{"name":"suspend fun HttpClient.mcpWebSocket(urlString: String? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): Client","description":"org.jetbrains.kotlinx.mcp.client.mcpWebSocket","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/mcp-web-socket.html","searchKeys":["mcpWebSocket","suspend fun HttpClient.mcpWebSocket(urlString: String? = null, requestBuilder: HttpRequestBuilder.() -> Unit = {}): Client","org.jetbrains.kotlinx.mcp.client.mcpWebSocket"]},{"name":"suspend fun callTool(name: String, arguments: Map<String, Any?>, compatibility: Boolean = false, options: RequestOptions? = null): CallToolResultBase?","description":"org.jetbrains.kotlinx.mcp.client.Client.callTool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/call-tool.html","searchKeys":["callTool","suspend fun callTool(name: String, arguments: Map<String, Any?>, compatibility: Boolean = false, options: RequestOptions? = null): CallToolResultBase?","org.jetbrains.kotlinx.mcp.client.Client.callTool"]},{"name":"suspend fun callTool(request: CallToolRequest, compatibility: Boolean = false, options: RequestOptions? = null): CallToolResultBase?","description":"org.jetbrains.kotlinx.mcp.client.Client.callTool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/call-tool.html","searchKeys":["callTool","suspend fun callTool(request: CallToolRequest, compatibility: Boolean = false, options: RequestOptions? = null): CallToolResultBase?","org.jetbrains.kotlinx.mcp.client.Client.callTool"]},{"name":"suspend fun close()","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.close","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/close.html","searchKeys":["close","suspend fun close()","org.jetbrains.kotlinx.mcp.shared.Protocol.close"]},{"name":"suspend fun complete(params: CompleteRequest, options: RequestOptions? = null): CompleteResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.complete","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/complete.html","searchKeys":["complete","suspend fun complete(params: CompleteRequest, options: RequestOptions? = null): CompleteResult?","org.jetbrains.kotlinx.mcp.client.Client.complete"]},{"name":"suspend fun createMessage(params: CreateMessageRequest, options: RequestOptions? = null): CreateMessageResult","description":"org.jetbrains.kotlinx.mcp.server.Server.createMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/create-message.html","searchKeys":["createMessage","suspend fun createMessage(params: CreateMessageRequest, options: RequestOptions? = null): CreateMessageResult","org.jetbrains.kotlinx.mcp.server.Server.createMessage"]},{"name":"suspend fun getPrompt(request: GetPromptRequest, options: RequestOptions? = null): GetPromptResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.getPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/get-prompt.html","searchKeys":["getPrompt","suspend fun getPrompt(request: GetPromptRequest, options: RequestOptions? = null): GetPromptResult?","org.jetbrains.kotlinx.mcp.client.Client.getPrompt"]},{"name":"suspend fun handleMessage(message: String)","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.handleMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/handle-message.html","searchKeys":["handleMessage","suspend fun handleMessage(message: String)","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.handleMessage"]},{"name":"suspend fun handlePostMessage(call: ApplicationCall)","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.handlePostMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/handle-post-message.html","searchKeys":["handlePostMessage","suspend fun handlePostMessage(call: ApplicationCall)","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.handlePostMessage"]},{"name":"suspend fun listPrompts(request: ListPromptsRequest = ListPromptsRequest(), options: RequestOptions? = null): ListPromptsResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.listPrompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/list-prompts.html","searchKeys":["listPrompts","suspend fun listPrompts(request: ListPromptsRequest = ListPromptsRequest(), options: RequestOptions? = null): ListPromptsResult?","org.jetbrains.kotlinx.mcp.client.Client.listPrompts"]},{"name":"suspend fun listResourceTemplates(request: ListResourceTemplatesRequest, options: RequestOptions? = null): ListResourceTemplatesResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.listResourceTemplates","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/list-resource-templates.html","searchKeys":["listResourceTemplates","suspend fun listResourceTemplates(request: ListResourceTemplatesRequest, options: RequestOptions? = null): ListResourceTemplatesResult?","org.jetbrains.kotlinx.mcp.client.Client.listResourceTemplates"]},{"name":"suspend fun listResources(request: ListResourcesRequest = ListResourcesRequest(), options: RequestOptions? = null): ListResourcesResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.listResources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/list-resources.html","searchKeys":["listResources","suspend fun listResources(request: ListResourcesRequest = ListResourcesRequest(), options: RequestOptions? = null): ListResourcesResult?","org.jetbrains.kotlinx.mcp.client.Client.listResources"]},{"name":"suspend fun listRoots(params: JsonObject = EmptyJsonObject, options: RequestOptions? = null): ListRootsResult","description":"org.jetbrains.kotlinx.mcp.server.Server.listRoots","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/list-roots.html","searchKeys":["listRoots","suspend fun listRoots(params: JsonObject = EmptyJsonObject, options: RequestOptions? = null): ListRootsResult","org.jetbrains.kotlinx.mcp.server.Server.listRoots"]},{"name":"suspend fun listTools(request: ListToolsRequest = ListToolsRequest(), options: RequestOptions? = null): ListToolsResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.listTools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/list-tools.html","searchKeys":["listTools","suspend fun listTools(request: ListToolsRequest = ListToolsRequest(), options: RequestOptions? = null): ListToolsResult?","org.jetbrains.kotlinx.mcp.client.Client.listTools"]},{"name":"suspend fun notification(notification: SendNotificationT)","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.notification","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/notification.html","searchKeys":["notification","suspend fun notification(notification: SendNotificationT)","org.jetbrains.kotlinx.mcp.shared.Protocol.notification"]},{"name":"suspend fun ping(): EmptyRequestResult","description":"org.jetbrains.kotlinx.mcp.server.Server.ping","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/ping.html","searchKeys":["ping","suspend fun ping(): EmptyRequestResult","org.jetbrains.kotlinx.mcp.server.Server.ping"]},{"name":"suspend fun ping(options: RequestOptions? = null): EmptyRequestResult","description":"org.jetbrains.kotlinx.mcp.client.Client.ping","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/ping.html","searchKeys":["ping","suspend fun ping(options: RequestOptions? = null): EmptyRequestResult","org.jetbrains.kotlinx.mcp.client.Client.ping"]},{"name":"suspend fun readResource(request: ReadResourceRequest, options: RequestOptions? = null): ReadResourceResult?","description":"org.jetbrains.kotlinx.mcp.client.Client.readResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/read-resource.html","searchKeys":["readResource","suspend fun readResource(request: ReadResourceRequest, options: RequestOptions? = null): ReadResourceResult?","org.jetbrains.kotlinx.mcp.client.Client.readResource"]},{"name":"suspend fun sendLoggingMessage(params: LoggingMessageNotification)","description":"org.jetbrains.kotlinx.mcp.server.Server.sendLoggingMessage","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/send-logging-message.html","searchKeys":["sendLoggingMessage","suspend fun sendLoggingMessage(params: LoggingMessageNotification)","org.jetbrains.kotlinx.mcp.server.Server.sendLoggingMessage"]},{"name":"suspend fun sendPromptListChanged()","description":"org.jetbrains.kotlinx.mcp.server.Server.sendPromptListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/send-prompt-list-changed.html","searchKeys":["sendPromptListChanged","suspend fun sendPromptListChanged()","org.jetbrains.kotlinx.mcp.server.Server.sendPromptListChanged"]},{"name":"suspend fun sendResourceListChanged()","description":"org.jetbrains.kotlinx.mcp.server.Server.sendResourceListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/send-resource-list-changed.html","searchKeys":["sendResourceListChanged","suspend fun sendResourceListChanged()","org.jetbrains.kotlinx.mcp.server.Server.sendResourceListChanged"]},{"name":"suspend fun sendResourceUpdated(params: ResourceUpdatedNotification)","description":"org.jetbrains.kotlinx.mcp.server.Server.sendResourceUpdated","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/send-resource-updated.html","searchKeys":["sendResourceUpdated","suspend fun sendResourceUpdated(params: ResourceUpdatedNotification)","org.jetbrains.kotlinx.mcp.server.Server.sendResourceUpdated"]},{"name":"suspend fun sendRootsListChanged()","description":"org.jetbrains.kotlinx.mcp.client.Client.sendRootsListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/send-roots-list-changed.html","searchKeys":["sendRootsListChanged","suspend fun sendRootsListChanged()","org.jetbrains.kotlinx.mcp.client.Client.sendRootsListChanged"]},{"name":"suspend fun sendToolListChanged()","description":"org.jetbrains.kotlinx.mcp.server.Server.sendToolListChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/send-tool-list-changed.html","searchKeys":["sendToolListChanged","suspend fun sendToolListChanged()","org.jetbrains.kotlinx.mcp.server.Server.sendToolListChanged"]},{"name":"suspend fun setLoggingLevel(level: LoggingLevel, options: RequestOptions? = null): EmptyRequestResult","description":"org.jetbrains.kotlinx.mcp.client.Client.setLoggingLevel","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/set-logging-level.html","searchKeys":["setLoggingLevel","suspend fun setLoggingLevel(level: LoggingLevel, options: RequestOptions? = null): EmptyRequestResult","org.jetbrains.kotlinx.mcp.client.Client.setLoggingLevel"]},{"name":"suspend fun subscribeResource(request: SubscribeRequest, options: RequestOptions? = null): EmptyRequestResult","description":"org.jetbrains.kotlinx.mcp.client.Client.subscribeResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/subscribe-resource.html","searchKeys":["subscribeResource","suspend fun subscribeResource(request: SubscribeRequest, options: RequestOptions? = null): EmptyRequestResult","org.jetbrains.kotlinx.mcp.client.Client.subscribeResource"]},{"name":"suspend fun unsubscribeResource(request: UnsubscribeRequest, options: RequestOptions? = null): EmptyRequestResult","description":"org.jetbrains.kotlinx.mcp.client.Client.unsubscribeResource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client/unsubscribe-resource.html","searchKeys":["unsubscribeResource","suspend fun unsubscribeResource(request: UnsubscribeRequest, options: RequestOptions? = null): EmptyRequestResult","org.jetbrains.kotlinx.mcp.client.Client.unsubscribeResource"]},{"name":"thisServer","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.thisServer","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/this-server/index.html","searchKeys":["thisServer","thisServer","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.thisServer"]},{"name":"typealias Cursor = String","description":"org.jetbrains.kotlinx.mcp.Cursor","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cursor/index.html","searchKeys":["Cursor","typealias Cursor = String","org.jetbrains.kotlinx.mcp.Cursor"]},{"name":"typealias ProgressCallback = (Progress) -> Unit","description":"org.jetbrains.kotlinx.mcp.shared.ProgressCallback","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-progress-callback/index.html","searchKeys":["ProgressCallback","typealias ProgressCallback = (Progress) -> Unit","org.jetbrains.kotlinx.mcp.shared.ProgressCallback"]},{"name":"typealias ProgressToken = Long","description":"org.jetbrains.kotlinx.mcp.ProgressToken","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-token/index.html","searchKeys":["ProgressToken","typealias ProgressToken = Long","org.jetbrains.kotlinx.mcp.ProgressToken"]},{"name":"typealias RequestId = Long","description":"org.jetbrains.kotlinx.mcp.RequestId","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-request-id/index.html","searchKeys":["RequestId","typealias RequestId = Long","org.jetbrains.kotlinx.mcp.RequestId"]},{"name":"user","description":"org.jetbrains.kotlinx.mcp.Role.user","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/user/index.html","searchKeys":["user","user","org.jetbrains.kotlinx.mcp.Role.user"]},{"name":"val DEFAULT_REQUEST_TIMEOUT: Duration","description":"org.jetbrains.kotlinx.mcp.shared.DEFAULT_REQUEST_TIMEOUT","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-d-e-f-a-u-l-t_-r-e-q-u-e-s-t_-t-i-m-e-o-u-t.html","searchKeys":["DEFAULT_REQUEST_TIMEOUT","val DEFAULT_REQUEST_TIMEOUT: Duration","org.jetbrains.kotlinx.mcp.shared.DEFAULT_REQUEST_TIMEOUT"]},{"name":"val Empty: CustomMeta","description":"org.jetbrains.kotlinx.mcp.WithMeta.Companion.Empty","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-with-meta/-companion/-empty.html","searchKeys":["Empty","val Empty: CustomMeta","org.jetbrains.kotlinx.mcp.WithMeta.Companion.Empty"]},{"name":"val SUPPORTED_PROTOCOL_VERSIONS: Array<String>","description":"org.jetbrains.kotlinx.mcp.SUPPORTED_PROTOCOL_VERSIONS","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-s-u-p-p-o-r-t-e-d_-p-r-o-t-o-c-o-l_-v-e-r-s-i-o-n-s.html","searchKeys":["SUPPORTED_PROTOCOL_VERSIONS","val SUPPORTED_PROTOCOL_VERSIONS: Array<String>","org.jetbrains.kotlinx.mcp.SUPPORTED_PROTOCOL_VERSIONS"]},{"name":"val _meta: JsonObject","description":"org.jetbrains.kotlinx.mcp.ProgressNotification._meta","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/_meta.html","searchKeys":["_meta","val _meta: JsonObject","org.jetbrains.kotlinx.mcp.ProgressNotification._meta"]},{"name":"val argument: CompleteRequest.Argument","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.argument","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/argument.html","searchKeys":["argument","val argument: CompleteRequest.Argument","org.jetbrains.kotlinx.mcp.CompleteRequest.argument"]},{"name":"val arguments: JsonObject","description":"org.jetbrains.kotlinx.mcp.CallToolRequest.arguments","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/arguments.html","searchKeys":["arguments","val arguments: JsonObject","org.jetbrains.kotlinx.mcp.CallToolRequest.arguments"]},{"name":"val arguments: List<PromptArgument>?","description":"org.jetbrains.kotlinx.mcp.Prompt.arguments","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt/arguments.html","searchKeys":["arguments","val arguments: List<PromptArgument>?","org.jetbrains.kotlinx.mcp.Prompt.arguments"]},{"name":"val arguments: Map<String, String>?","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest.arguments","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/arguments.html","searchKeys":["arguments","val arguments: Map<String, String>?","org.jetbrains.kotlinx.mcp.GetPromptRequest.arguments"]},{"name":"val blob: String","description":"org.jetbrains.kotlinx.mcp.BlobResourceContents.blob","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-blob-resource-contents/blob.html","searchKeys":["blob","val blob: String","org.jetbrains.kotlinx.mcp.BlobResourceContents.blob"]},{"name":"val capabilities: ClientCapabilities","description":"org.jetbrains.kotlinx.mcp.InitializeRequest.capabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/capabilities.html","searchKeys":["capabilities","val capabilities: ClientCapabilities","org.jetbrains.kotlinx.mcp.InitializeRequest.capabilities"]},{"name":"val capabilities: ClientCapabilities","description":"org.jetbrains.kotlinx.mcp.client.ClientOptions.capabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.client/-client-options/capabilities.html","searchKeys":["capabilities","val capabilities: ClientCapabilities","org.jetbrains.kotlinx.mcp.client.ClientOptions.capabilities"]},{"name":"val capabilities: ServerCapabilities","description":"org.jetbrains.kotlinx.mcp.InitializeResult.capabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/capabilities.html","searchKeys":["capabilities","val capabilities: ServerCapabilities","org.jetbrains.kotlinx.mcp.InitializeResult.capabilities"]},{"name":"val capabilities: ServerCapabilities","description":"org.jetbrains.kotlinx.mcp.server.ServerOptions.capabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server-options/capabilities.html","searchKeys":["capabilities","val capabilities: ServerCapabilities","org.jetbrains.kotlinx.mcp.server.ServerOptions.capabilities"]},{"name":"val clientInfo: Implementation","description":"org.jetbrains.kotlinx.mcp.InitializeRequest.clientInfo","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/client-info.html","searchKeys":["clientInfo","val clientInfo: Implementation","org.jetbrains.kotlinx.mcp.InitializeRequest.clientInfo"]},{"name":"val code: ErrorCode","description":"org.jetbrains.kotlinx.mcp.JSONRPCError.code","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-error/code.html","searchKeys":["code","val code: ErrorCode","org.jetbrains.kotlinx.mcp.JSONRPCError.code"]},{"name":"val code: Int","description":"org.jetbrains.kotlinx.mcp.McpError.code","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-mcp-error/code.html","searchKeys":["code","val code: Int","org.jetbrains.kotlinx.mcp.McpError.code"]},{"name":"val completion: CompleteResult.Completion","description":"org.jetbrains.kotlinx.mcp.CompleteResult.completion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/completion.html","searchKeys":["completion","val completion: CompleteResult.Completion","org.jetbrains.kotlinx.mcp.CompleteResult.completion"]},{"name":"val content: PromptMessageContent","description":"org.jetbrains.kotlinx.mcp.PromptMessage.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message/content.html","searchKeys":["content","val content: PromptMessageContent","org.jetbrains.kotlinx.mcp.PromptMessage.content"]},{"name":"val content: PromptMessageContentTextOrImage","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/content.html","searchKeys":["content","val content: PromptMessageContentTextOrImage","org.jetbrains.kotlinx.mcp.CreateMessageResult.content"]},{"name":"val content: PromptMessageContentTextOrImage","description":"org.jetbrains.kotlinx.mcp.SamplingMessage.content","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-sampling-message/content.html","searchKeys":["content","val content: PromptMessageContentTextOrImage","org.jetbrains.kotlinx.mcp.SamplingMessage.content"]},{"name":"val contents: List<ResourceContents>","description":"org.jetbrains.kotlinx.mcp.ReadResourceResult.contents","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-result/contents.html","searchKeys":["contents","val contents: List<ResourceContents>","org.jetbrains.kotlinx.mcp.ReadResourceResult.contents"]},{"name":"val costPriority: Double?","description":"org.jetbrains.kotlinx.mcp.ModelPreferences.costPriority","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/cost-priority.html","searchKeys":["costPriority","val costPriority: Double?","org.jetbrains.kotlinx.mcp.ModelPreferences.costPriority"]},{"name":"val data: JsonObject","description":"org.jetbrains.kotlinx.mcp.JSONRPCError.data","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-error/data.html","searchKeys":["data","val data: JsonObject","org.jetbrains.kotlinx.mcp.JSONRPCError.data"]},{"name":"val data: JsonObject","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.data","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/data.html","searchKeys":["data","val data: JsonObject","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.data"]},{"name":"val data: JsonObject","description":"org.jetbrains.kotlinx.mcp.McpError.data","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-mcp-error/data.html","searchKeys":["data","val data: JsonObject","org.jetbrains.kotlinx.mcp.McpError.data"]},{"name":"val data: String","description":"org.jetbrains.kotlinx.mcp.ImageContent.data","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/data.html","searchKeys":["data","val data: String","org.jetbrains.kotlinx.mcp.ImageContent.data"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.GetPromptResult.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-result/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.GetPromptResult.description"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.Prompt.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.Prompt.description"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.PromptArgument.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-argument/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.PromptArgument.description"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.Resource.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.Resource.description"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.ResourceTemplate.description"]},{"name":"val description: String?","description":"org.jetbrains.kotlinx.mcp.Tool.description","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/description.html","searchKeys":["description","val description: String?","org.jetbrains.kotlinx.mcp.Tool.description"]},{"name":"val entries: EnumEntries<CreateMessageRequest.IncludeContext>","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.entries","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/-include-context/entries.html","searchKeys":["entries","val entries: EnumEntries<CreateMessageRequest.IncludeContext>","org.jetbrains.kotlinx.mcp.CreateMessageRequest.IncludeContext.entries"]},{"name":"val entries: EnumEntries<ErrorCode.Defined>","description":"org.jetbrains.kotlinx.mcp.ErrorCode.Defined.entries","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-error-code/-defined/entries.html","searchKeys":["entries","val entries: EnumEntries<ErrorCode.Defined>","org.jetbrains.kotlinx.mcp.ErrorCode.Defined.entries"]},{"name":"val entries: EnumEntries<LoggingLevel>","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.entries","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/entries.html","searchKeys":["entries","val entries: EnumEntries<LoggingLevel>","org.jetbrains.kotlinx.mcp.LoggingLevel.entries"]},{"name":"val entries: EnumEntries<Method.Defined>","description":"org.jetbrains.kotlinx.mcp.Method.Defined.entries","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-method/-defined/entries.html","searchKeys":["entries","val entries: EnumEntries<Method.Defined>","org.jetbrains.kotlinx.mcp.Method.Defined.entries"]},{"name":"val entries: EnumEntries<Role>","description":"org.jetbrains.kotlinx.mcp.Role.entries","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-role/entries.html","searchKeys":["entries","val entries: EnumEntries<Role>","org.jetbrains.kotlinx.mcp.Role.entries"]},{"name":"val error: JSONRPCError? = null","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse.error","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/error.html","searchKeys":["error","val error: JSONRPCError? = null","org.jetbrains.kotlinx.mcp.JSONRPCResponse.error"]},{"name":"val experimental: JsonObject?","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.experimental","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/experimental.html","searchKeys":["experimental","val experimental: JsonObject?","org.jetbrains.kotlinx.mcp.ClientCapabilities.experimental"]},{"name":"val experimental: JsonObject?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.experimental","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/experimental.html","searchKeys":["experimental","val experimental: JsonObject?","org.jetbrains.kotlinx.mcp.ServerCapabilities.experimental"]},{"name":"val handler: suspend (CallToolRequest) -> CallToolResult","description":"org.jetbrains.kotlinx.mcp.server.RegisteredTool.handler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-tool/handler.html","searchKeys":["handler","val handler: suspend (CallToolRequest) -> CallToolResult","org.jetbrains.kotlinx.mcp.server.RegisteredTool.handler"]},{"name":"val hasMore: Boolean?","description":"org.jetbrains.kotlinx.mcp.CompleteResult.Completion.hasMore","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-completion/has-more.html","searchKeys":["hasMore","val hasMore: Boolean?","org.jetbrains.kotlinx.mcp.CompleteResult.Completion.hasMore"]},{"name":"val hints: List<ModelHint>?","description":"org.jetbrains.kotlinx.mcp.ModelPreferences.hints","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/hints.html","searchKeys":["hints","val hints: List<ModelHint>?","org.jetbrains.kotlinx.mcp.ModelPreferences.hints"]},{"name":"val id: RequestId","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest.id","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/id.html","searchKeys":["id","val id: RequestId","org.jetbrains.kotlinx.mcp.JSONRPCRequest.id"]},{"name":"val id: RequestId","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse.id","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/id.html","searchKeys":["id","val id: RequestId","org.jetbrains.kotlinx.mcp.JSONRPCResponse.id"]},{"name":"val includeContext: CreateMessageRequest.IncludeContext?","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.includeContext","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/include-context.html","searchKeys":["includeContext","val includeContext: CreateMessageRequest.IncludeContext?","org.jetbrains.kotlinx.mcp.CreateMessageRequest.includeContext"]},{"name":"val inputSchema: Tool.Input","description":"org.jetbrains.kotlinx.mcp.Tool.inputSchema","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/input-schema.html","searchKeys":["inputSchema","val inputSchema: Tool.Input","org.jetbrains.kotlinx.mcp.Tool.inputSchema"]},{"name":"val intelligencePriority: Double?","description":"org.jetbrains.kotlinx.mcp.ModelPreferences.intelligencePriority","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/intelligence-priority.html","searchKeys":["intelligencePriority","val intelligencePriority: Double?","org.jetbrains.kotlinx.mcp.ModelPreferences.intelligencePriority"]},{"name":"val jsonrpc: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCNotification.jsonrpc","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-notification/jsonrpc.html","searchKeys":["jsonrpc","val jsonrpc: String","org.jetbrains.kotlinx.mcp.JSONRPCNotification.jsonrpc"]},{"name":"val jsonrpc: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest.jsonrpc","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/jsonrpc.html","searchKeys":["jsonrpc","val jsonrpc: String","org.jetbrains.kotlinx.mcp.JSONRPCRequest.jsonrpc"]},{"name":"val jsonrpc: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse.jsonrpc","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/jsonrpc.html","searchKeys":["jsonrpc","val jsonrpc: String","org.jetbrains.kotlinx.mcp.JSONRPCResponse.jsonrpc"]},{"name":"val level: LoggingLevel","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.level","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/-set-level-request/level.html","searchKeys":["level","val level: LoggingLevel","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.SetLevelRequest.level"]},{"name":"val level: LoggingLevel","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.level","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/level.html","searchKeys":["level","val level: LoggingLevel","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.level"]},{"name":"val listChanged: Boolean?","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots.listChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/-roots/list-changed.html","searchKeys":["listChanged","val listChanged: Boolean?","org.jetbrains.kotlinx.mcp.ClientCapabilities.Roots.listChanged"]},{"name":"val listChanged: Boolean?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts.listChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-prompts/list-changed.html","searchKeys":["listChanged","val listChanged: Boolean?","org.jetbrains.kotlinx.mcp.ServerCapabilities.Prompts.listChanged"]},{"name":"val listChanged: Boolean?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.listChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-resources/list-changed.html","searchKeys":["listChanged","val listChanged: Boolean?","org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.listChanged"]},{"name":"val listChanged: Boolean?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools.listChanged","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-tools/list-changed.html","searchKeys":["listChanged","val listChanged: Boolean?","org.jetbrains.kotlinx.mcp.ServerCapabilities.Tools.listChanged"]},{"name":"val logger: String? = null","description":"org.jetbrains.kotlinx.mcp.LoggingMessageNotification.logger","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-message-notification/logger.html","searchKeys":["logger","val logger: String? = null","org.jetbrains.kotlinx.mcp.LoggingMessageNotification.logger"]},{"name":"val logging: JsonObject?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.logging","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/logging.html","searchKeys":["logging","val logging: JsonObject?","org.jetbrains.kotlinx.mcp.ServerCapabilities.logging"]},{"name":"val maxTokens: Int","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.maxTokens","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/max-tokens.html","searchKeys":["maxTokens","val maxTokens: Int","org.jetbrains.kotlinx.mcp.CreateMessageRequest.maxTokens"]},{"name":"val message: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCError.message","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-error/message.html","searchKeys":["message","val message: String","org.jetbrains.kotlinx.mcp.JSONRPCError.message"]},{"name":"val messageProvider: suspend (GetPromptRequest) -> GetPromptResult","description":"org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.messageProvider","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-prompt/message-provider.html","searchKeys":["messageProvider","val messageProvider: suspend (GetPromptRequest) -> GetPromptResult","org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.messageProvider"]},{"name":"val messages: List<PromptMessage>","description":"org.jetbrains.kotlinx.mcp.GetPromptResult.messages","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-result/messages.html","searchKeys":["messages","val messages: List<PromptMessage>","org.jetbrains.kotlinx.mcp.GetPromptResult.messages"]},{"name":"val messages: List<SamplingMessage>","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.messages","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/messages.html","searchKeys":["messages","val messages: List<SamplingMessage>","org.jetbrains.kotlinx.mcp.CreateMessageRequest.messages"]},{"name":"val metadata: JsonObject","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.metadata","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/metadata.html","searchKeys":["metadata","val metadata: JsonObject","org.jetbrains.kotlinx.mcp.CreateMessageRequest.metadata"]},{"name":"val method: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCNotification.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-notification/method.html","searchKeys":["method","val method: String","org.jetbrains.kotlinx.mcp.JSONRPCNotification.method"]},{"name":"val method: String","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest.method","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/method.html","searchKeys":["method","val method: String","org.jetbrains.kotlinx.mcp.JSONRPCRequest.method"]},{"name":"val mimeType: String","description":"org.jetbrains.kotlinx.mcp.ImageContent.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-image-content/mime-type.html","searchKeys":["mimeType","val mimeType: String","org.jetbrains.kotlinx.mcp.ImageContent.mimeType"]},{"name":"val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.Resource.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/mime-type.html","searchKeys":["mimeType","val mimeType: String?","org.jetbrains.kotlinx.mcp.Resource.mimeType"]},{"name":"val mimeType: String?","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate.mimeType","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/mime-type.html","searchKeys":["mimeType","val mimeType: String?","org.jetbrains.kotlinx.mcp.ResourceTemplate.mimeType"]},{"name":"val model: String","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult.model","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/model.html","searchKeys":["model","val model: String","org.jetbrains.kotlinx.mcp.CreateMessageResult.model"]},{"name":"val modelPreferences: ModelPreferences?","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.modelPreferences","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/model-preferences.html","searchKeys":["modelPreferences","val modelPreferences: ModelPreferences?","org.jetbrains.kotlinx.mcp.CreateMessageRequest.modelPreferences"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.CallToolRequest.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-call-tool-request/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.CallToolRequest.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/-argument/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.GetPromptRequest.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-get-prompt-request/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.GetPromptRequest.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.Implementation.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-implementation/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.Implementation.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.Prompt.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.Prompt.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.PromptArgument.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-argument/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.PromptArgument.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.PromptReference.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-reference/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.PromptReference.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.Resource.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.Resource.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.ResourceTemplate.name"]},{"name":"val name: String","description":"org.jetbrains.kotlinx.mcp.Tool.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/name.html","searchKeys":["name","val name: String","org.jetbrains.kotlinx.mcp.Tool.name"]},{"name":"val name: String?","description":"org.jetbrains.kotlinx.mcp.ModelHint.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-hint/name.html","searchKeys":["name","val name: String?","org.jetbrains.kotlinx.mcp.ModelHint.name"]},{"name":"val name: String?","description":"org.jetbrains.kotlinx.mcp.Root.name","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-root/name.html","searchKeys":["name","val name: String?","org.jetbrains.kotlinx.mcp.Root.name"]},{"name":"val notificationHandlers: MutableMap<String, suspend (notification: JSONRPCNotification) -> Unit>","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.notificationHandlers","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/notification-handlers.html","searchKeys":["notificationHandlers","val notificationHandlers: MutableMap<String, suspend (notification: JSONRPCNotification) -> Unit>","org.jetbrains.kotlinx.mcp.shared.Protocol.notificationHandlers"]},{"name":"val onProgress: ProgressCallback? = null","description":"org.jetbrains.kotlinx.mcp.shared.RequestOptions.onProgress","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-options/on-progress.html","searchKeys":["onProgress","val onProgress: ProgressCallback? = null","org.jetbrains.kotlinx.mcp.shared.RequestOptions.onProgress"]},{"name":"val params: JsonElement","description":"org.jetbrains.kotlinx.mcp.JSONRPCNotification.params","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-notification/params.html","searchKeys":["params","val params: JsonElement","org.jetbrains.kotlinx.mcp.JSONRPCNotification.params"]},{"name":"val params: JsonElement? = null","description":"org.jetbrains.kotlinx.mcp.JSONRPCRequest.params","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-request/params.html","searchKeys":["params","val params: JsonElement? = null","org.jetbrains.kotlinx.mcp.JSONRPCRequest.params"]},{"name":"val progressToken: ProgressToken","description":"org.jetbrains.kotlinx.mcp.ProgressNotification.progressToken","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-progress-notification/progress-token.html","searchKeys":["progressToken","val progressToken: ProgressToken","org.jetbrains.kotlinx.mcp.ProgressNotification.progressToken"]},{"name":"val prompt: Prompt","description":"org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.prompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-prompt/prompt.html","searchKeys":["prompt","val prompt: Prompt","org.jetbrains.kotlinx.mcp.server.RegisteredPrompt.prompt"]},{"name":"val prompts: List<Prompt>","description":"org.jetbrains.kotlinx.mcp.ListPromptsResult.prompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-prompts-result/prompts.html","searchKeys":["prompts","val prompts: List<Prompt>","org.jetbrains.kotlinx.mcp.ListPromptsResult.prompts"]},{"name":"val prompts: ServerCapabilities.Prompts? = null","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.prompts","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/prompts.html","searchKeys":["prompts","val prompts: ServerCapabilities.Prompts? = null","org.jetbrains.kotlinx.mcp.ServerCapabilities.prompts"]},{"name":"val properties: JsonObject","description":"org.jetbrains.kotlinx.mcp.Tool.Input.properties","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/-input/properties.html","searchKeys":["properties","val properties: JsonObject","org.jetbrains.kotlinx.mcp.Tool.Input.properties"]},{"name":"val protocolVersion: String","description":"org.jetbrains.kotlinx.mcp.InitializeRequest.protocolVersion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-request/protocol-version.html","searchKeys":["protocolVersion","val protocolVersion: String","org.jetbrains.kotlinx.mcp.InitializeRequest.protocolVersion"]},{"name":"val protocolVersion: String","description":"org.jetbrains.kotlinx.mcp.InitializeResult.protocolVersion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/protocol-version.html","searchKeys":["protocolVersion","val protocolVersion: String","org.jetbrains.kotlinx.mcp.InitializeResult.protocolVersion"]},{"name":"val readHandler: suspend (ReadResourceRequest) -> ReadResourceResult","description":"org.jetbrains.kotlinx.mcp.server.RegisteredResource.readHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-resource/read-handler.html","searchKeys":["readHandler","val readHandler: suspend (ReadResourceRequest) -> ReadResourceResult","org.jetbrains.kotlinx.mcp.server.RegisteredResource.readHandler"]},{"name":"val reason: String?","description":"org.jetbrains.kotlinx.mcp.CancelledNotification.reason","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/reason.html","searchKeys":["reason","val reason: String?","org.jetbrains.kotlinx.mcp.CancelledNotification.reason"]},{"name":"val ref: Reference","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.ref","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/ref.html","searchKeys":["ref","val ref: Reference","org.jetbrains.kotlinx.mcp.CompleteRequest.ref"]},{"name":"val requestId: RequestId","description":"org.jetbrains.kotlinx.mcp.CancelledNotification.requestId","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-cancelled-notification/request-id.html","searchKeys":["requestId","val requestId: RequestId","org.jetbrains.kotlinx.mcp.CancelledNotification.requestId"]},{"name":"val required: Boolean?","description":"org.jetbrains.kotlinx.mcp.PromptArgument.required","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-argument/required.html","searchKeys":["required","val required: Boolean?","org.jetbrains.kotlinx.mcp.PromptArgument.required"]},{"name":"val resource: Resource","description":"org.jetbrains.kotlinx.mcp.server.RegisteredResource.resource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-resource/resource.html","searchKeys":["resource","val resource: Resource","org.jetbrains.kotlinx.mcp.server.RegisteredResource.resource"]},{"name":"val resource: ResourceContents","description":"org.jetbrains.kotlinx.mcp.EmbeddedResource.resource","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-embedded-resource/resource.html","searchKeys":["resource","val resource: ResourceContents","org.jetbrains.kotlinx.mcp.EmbeddedResource.resource"]},{"name":"val resourceTemplates: List<ResourceTemplate>","description":"org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.resourceTemplates","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resource-templates-result/resource-templates.html","searchKeys":["resourceTemplates","val resourceTemplates: List<ResourceTemplate>","org.jetbrains.kotlinx.mcp.ListResourceTemplatesResult.resourceTemplates"]},{"name":"val resources: List<Resource>","description":"org.jetbrains.kotlinx.mcp.ListResourcesResult.resources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-resources-result/resources.html","searchKeys":["resources","val resources: List<Resource>","org.jetbrains.kotlinx.mcp.ListResourcesResult.resources"]},{"name":"val resources: ServerCapabilities.Resources? = null","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.resources","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/resources.html","searchKeys":["resources","val resources: ServerCapabilities.Resources? = null","org.jetbrains.kotlinx.mcp.ServerCapabilities.resources"]},{"name":"val result: RequestResult? = null","description":"org.jetbrains.kotlinx.mcp.JSONRPCResponse.result","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-j-s-o-n-r-p-c-response/result.html","searchKeys":["result","val result: RequestResult? = null","org.jetbrains.kotlinx.mcp.JSONRPCResponse.result"]},{"name":"val role: Role","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult.role","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/role.html","searchKeys":["role","val role: Role","org.jetbrains.kotlinx.mcp.CreateMessageResult.role"]},{"name":"val role: Role","description":"org.jetbrains.kotlinx.mcp.PromptMessage.role","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-prompt-message/role.html","searchKeys":["role","val role: Role","org.jetbrains.kotlinx.mcp.PromptMessage.role"]},{"name":"val role: Role","description":"org.jetbrains.kotlinx.mcp.SamplingMessage.role","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-sampling-message/role.html","searchKeys":["role","val role: Role","org.jetbrains.kotlinx.mcp.SamplingMessage.role"]},{"name":"val roots: ClientCapabilities.Roots? = null","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.roots","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/roots.html","searchKeys":["roots","val roots: ClientCapabilities.Roots? = null","org.jetbrains.kotlinx.mcp.ClientCapabilities.roots"]},{"name":"val roots: List<Root>","description":"org.jetbrains.kotlinx.mcp.ListRootsResult.roots","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-roots-result/roots.html","searchKeys":["roots","val roots: List<Root>","org.jetbrains.kotlinx.mcp.ListRootsResult.roots"]},{"name":"val sampling: JsonObject?","description":"org.jetbrains.kotlinx.mcp.ClientCapabilities.sampling","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-client-capabilities/sampling.html","searchKeys":["sampling","val sampling: JsonObject?","org.jetbrains.kotlinx.mcp.ClientCapabilities.sampling"]},{"name":"val sampling: JsonObject?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.sampling","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/sampling.html","searchKeys":["sampling","val sampling: JsonObject?","org.jetbrains.kotlinx.mcp.ServerCapabilities.sampling"]},{"name":"val serverInfo: Implementation","description":"org.jetbrains.kotlinx.mcp.InitializeResult.serverInfo","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-initialize-result/server-info.html","searchKeys":["serverInfo","val serverInfo: Implementation","org.jetbrains.kotlinx.mcp.InitializeResult.serverInfo"]},{"name":"val sessionId: String","description":"org.jetbrains.kotlinx.mcp.server.SSEServerTransport.sessionId","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-s-s-e-server-transport/session-id.html","searchKeys":["sessionId","val sessionId: String","org.jetbrains.kotlinx.mcp.server.SSEServerTransport.sessionId"]},{"name":"val speedPriority: Double?","description":"org.jetbrains.kotlinx.mcp.ModelPreferences.speedPriority","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-model-preferences/speed-priority.html","searchKeys":["speedPriority","val speedPriority: Double?","org.jetbrains.kotlinx.mcp.ModelPreferences.speedPriority"]},{"name":"val stopReason: StopReason? = null","description":"org.jetbrains.kotlinx.mcp.CreateMessageResult.stopReason","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-result/stop-reason.html","searchKeys":["stopReason","val stopReason: StopReason? = null","org.jetbrains.kotlinx.mcp.CreateMessageResult.stopReason"]},{"name":"val stopSequences: List<String>?","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.stopSequences","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/stop-sequences.html","searchKeys":["stopSequences","val stopSequences: List<String>?","org.jetbrains.kotlinx.mcp.CreateMessageRequest.stopSequences"]},{"name":"val subscribe: Boolean?","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.subscribe","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/-resources/subscribe.html","searchKeys":["subscribe","val subscribe: Boolean?","org.jetbrains.kotlinx.mcp.ServerCapabilities.Resources.subscribe"]},{"name":"val systemPrompt: String?","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.systemPrompt","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/system-prompt.html","searchKeys":["systemPrompt","val systemPrompt: String?","org.jetbrains.kotlinx.mcp.CreateMessageRequest.systemPrompt"]},{"name":"val temperature: Double?","description":"org.jetbrains.kotlinx.mcp.CreateMessageRequest.temperature","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-create-message-request/temperature.html","searchKeys":["temperature","val temperature: Double?","org.jetbrains.kotlinx.mcp.CreateMessageRequest.temperature"]},{"name":"val text: String","description":"org.jetbrains.kotlinx.mcp.TextResourceContents.text","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-resource-contents/text.html","searchKeys":["text","val text: String","org.jetbrains.kotlinx.mcp.TextResourceContents.text"]},{"name":"val text: String? = null","description":"org.jetbrains.kotlinx.mcp.TextContent.text","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-text-content/text.html","searchKeys":["text","val text: String? = null","org.jetbrains.kotlinx.mcp.TextContent.text"]},{"name":"val timeout: Duration","description":"org.jetbrains.kotlinx.mcp.shared.RequestOptions.timeout","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-request-options/timeout.html","searchKeys":["timeout","val timeout: Duration","org.jetbrains.kotlinx.mcp.shared.RequestOptions.timeout"]},{"name":"val tool: Tool","description":"org.jetbrains.kotlinx.mcp.server.RegisteredTool.tool","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-registered-tool/tool.html","searchKeys":["tool","val tool: Tool","org.jetbrains.kotlinx.mcp.server.RegisteredTool.tool"]},{"name":"val toolResult: JsonObject","description":"org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.toolResult","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-compatibility-call-tool-result/tool-result.html","searchKeys":["toolResult","val toolResult: JsonObject","org.jetbrains.kotlinx.mcp.CompatibilityCallToolResult.toolResult"]},{"name":"val tools: List<Tool>","description":"org.jetbrains.kotlinx.mcp.ListToolsResult.tools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-list-tools-result/tools.html","searchKeys":["tools","val tools: List<Tool>","org.jetbrains.kotlinx.mcp.ListToolsResult.tools"]},{"name":"val tools: ServerCapabilities.Tools? = null","description":"org.jetbrains.kotlinx.mcp.ServerCapabilities.tools","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-server-capabilities/tools.html","searchKeys":["tools","val tools: ServerCapabilities.Tools? = null","org.jetbrains.kotlinx.mcp.ServerCapabilities.tools"]},{"name":"val total: Int?","description":"org.jetbrains.kotlinx.mcp.CompleteResult.Completion.total","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-completion/total.html","searchKeys":["total","val total: Int?","org.jetbrains.kotlinx.mcp.CompleteResult.Completion.total"]},{"name":"val type: String","description":"org.jetbrains.kotlinx.mcp.Tool.Input.type","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-tool/-input/type.html","searchKeys":["type","val type: String","org.jetbrains.kotlinx.mcp.Tool.Input.type"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.ReadResourceRequest.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-read-resource-request/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.ReadResourceRequest.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.Resource.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.Resource.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.ResourceReference.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-reference/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.ResourceReference.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-updated-notification/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.ResourceUpdatedNotification.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.Root.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-root/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.Root.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.SubscribeRequest.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-subscribe-request/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.SubscribeRequest.uri"]},{"name":"val uri: String","description":"org.jetbrains.kotlinx.mcp.UnsubscribeRequest.uri","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-unsubscribe-request/uri.html","searchKeys":["uri","val uri: String","org.jetbrains.kotlinx.mcp.UnsubscribeRequest.uri"]},{"name":"val uriTemplate: String","description":"org.jetbrains.kotlinx.mcp.ResourceTemplate.uriTemplate","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-resource-template/uri-template.html","searchKeys":["uriTemplate","val uriTemplate: String","org.jetbrains.kotlinx.mcp.ResourceTemplate.uriTemplate"]},{"name":"val value: String","description":"org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.value","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-request/-argument/value.html","searchKeys":["value","val value: String","org.jetbrains.kotlinx.mcp.CompleteRequest.Argument.value"]},{"name":"val values: List<String>","description":"org.jetbrains.kotlinx.mcp.CompleteResult.Completion.values","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-complete-result/-completion/values.html","searchKeys":["values","val values: List<String>","org.jetbrains.kotlinx.mcp.CompleteResult.Completion.values"]},{"name":"val version: String","description":"org.jetbrains.kotlinx.mcp.Implementation.version","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-implementation/version.html","searchKeys":["version","val version: String","org.jetbrains.kotlinx.mcp.Implementation.version"]},{"name":"value class Other(val value: String) : StopReason","description":"org.jetbrains.kotlinx.mcp.StopReason.Other","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-stop-reason/-other/index.html","searchKeys":["Other","value class Other(val value: String) : StopReason","org.jetbrains.kotlinx.mcp.StopReason.Other"]},{"name":"var clientCapabilities: ClientCapabilities?","description":"org.jetbrains.kotlinx.mcp.server.Server.clientCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/client-capabilities.html","searchKeys":["clientCapabilities","var clientCapabilities: ClientCapabilities?","org.jetbrains.kotlinx.mcp.server.Server.clientCapabilities"]},{"name":"var clientVersion: Implementation?","description":"org.jetbrains.kotlinx.mcp.server.Server.clientVersion","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/client-version.html","searchKeys":["clientVersion","var clientVersion: Implementation?","org.jetbrains.kotlinx.mcp.server.Server.clientVersion"]},{"name":"var enforceStrictCapabilities: Boolean","description":"org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.enforceStrictCapabilities","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol-options/enforce-strict-capabilities.html","searchKeys":["enforceStrictCapabilities","var enforceStrictCapabilities: Boolean","org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.enforceStrictCapabilities"]},{"name":"var fallbackNotificationHandler: suspend (notification: JSONRPCNotification) -> Unit?","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.fallbackNotificationHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/fallback-notification-handler.html","searchKeys":["fallbackNotificationHandler","var fallbackNotificationHandler: suspend (notification: JSONRPCNotification) -> Unit?","org.jetbrains.kotlinx.mcp.shared.Protocol.fallbackNotificationHandler"]},{"name":"var fallbackRequestHandler: suspend (request: JSONRPCRequest, extra: RequestHandlerExtra) -> SendResultT??","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.fallbackRequestHandler","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/fallback-request-handler.html","searchKeys":["fallbackRequestHandler","var fallbackRequestHandler: suspend (request: JSONRPCRequest, extra: RequestHandlerExtra) -> SendResultT??","org.jetbrains.kotlinx.mcp.shared.Protocol.fallbackRequestHandler"]},{"name":"var onCloseCallback: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.Server.onCloseCallback","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/on-close-callback.html","searchKeys":["onCloseCallback","var onCloseCallback: () -> Unit?","org.jetbrains.kotlinx.mcp.server.Server.onCloseCallback"]},{"name":"var onInitialized: () -> Unit?","description":"org.jetbrains.kotlinx.mcp.server.Server.onInitialized","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.server/-server/on-initialized.html","searchKeys":["onInitialized","var onInitialized: () -> Unit?","org.jetbrains.kotlinx.mcp.server.Server.onInitialized"]},{"name":"var timeout: Duration","description":"org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.timeout","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol-options/timeout.html","searchKeys":["timeout","var timeout: Duration","org.jetbrains.kotlinx.mcp.shared.ProtocolOptions.timeout"]},{"name":"var transport: Transport?","description":"org.jetbrains.kotlinx.mcp.shared.Protocol.transport","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp.shared/-protocol/transport.html","searchKeys":["transport","var transport: Transport?","org.jetbrains.kotlinx.mcp.shared.Protocol.transport"]},{"name":"warning","description":"org.jetbrains.kotlinx.mcp.LoggingLevel.warning","location":"-m-c-p -kotlin -s-d-k/org.jetbrains.kotlinx.mcp/-logging-level/warning/index.html","searchKeys":["warning","warning","org.jetbrains.kotlinx.mcp.LoggingLevel.warning"]}]